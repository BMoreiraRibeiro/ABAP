{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Almanaque ABAP","text":"<p>Bem-vindo ao Almanaque ABAP \u2014 um guia pr\u00e1tico, organizado por curva de aprendizagem, com exemplos, padr\u00f5es e exerc\u00edcios.</p> <p>Se est\u00e1 a come\u00e7ar, siga a ordem sugerida abaixo; se j\u00e1 conhece os fundamentos, navegue diretamente pelos temas avan\u00e7ados.</p>"},{"location":"#percurso-de-aprendizagem","title":"\ud83d\udcda Percurso de Aprendizagem","text":""},{"location":"#fundamentos","title":"\ud83e\udde9 Fundamentos","text":"<p>Conceitos b\u00e1sicos, tipos de dados, tabelas internas e estrutura do programa.</p>"},{"location":"#sql","title":"\ud83d\udcbe SQL","text":"<p>SELECTs, joins, agrega\u00e7\u00f5es e otimiza\u00e7\u00f5es de consultas.</p>"},{"location":"#objetos-oo","title":"\ud83e\uddf1 Objetos (OO)","text":"<p>Classes, interfaces e padr\u00f5es de programa\u00e7\u00e3o orientada a objetos em ABAP.</p>"},{"location":"#alv-list-viewer","title":"\ud83d\udcca ALV (List Viewer)","text":"<p>Todos os tipos de ALV (cl\u00e1ssico/OO/tree) e exemplos pr\u00e1ticos de apresenta\u00e7\u00e3o de dados.</p>"},{"location":"#debugging","title":"\ud83d\udc1e Debugging","text":"<p>T\u00e9cnicas de debugging, breakpoints e an\u00e1lise de c\u00f3digo em runtime.</p>"},{"location":"#testes","title":"\ud83e\uddea Testes","text":"<p>ABAP Unit e boas pr\u00e1ticas de testes unit\u00e1rios.</p>"},{"location":"#performance","title":"\u26a1 Performance","text":"<p>Tuning, FOR ALL ENTRIES e otimiza\u00e7\u00f5es de performance.</p>"},{"location":"#integracoes","title":"\ud83d\udd17 Integra\u00e7\u00f5es","text":"<p>BAPIs, RFCs, jobs em background e integra\u00e7\u00e3o com sistemas externos.</p>"},{"location":"#jobs-background","title":"\u23f0 Jobs / Background","text":"<p>Agendamento e execu\u00e7\u00e3o de programas em background.</p>"},{"location":"#security","title":"\ud83d\udd12 Security","text":"<p>Authority checks e boas pr\u00e1ticas de seguran\u00e7a.</p>"},{"location":"#utilitarios","title":"\ud83e\uddf0 Utilit\u00e1rios","text":"<p>Snippets \u00fateis, manipula\u00e7\u00e3o de datas, JSON e fun\u00e7\u00f5es auxiliares.</p>"},{"location":"#cds-amdp","title":"\ud83d\udd37 CDS / AMDP","text":""},{"location":"#core-data-services-e-abap-managed-database-procedures","title":"Core Data Services e ABAP Managed Database Procedures.","text":""},{"location":"#por-onde-comecar","title":"\ud83d\ude80 Por onde come\u00e7ar?","text":"<ol> <li>Iniciante? Comece por Fundamentos \u2192 SQL \u2192 ALV</li> <li>J\u00e1 conhece ABAP b\u00e1sico? Explore Objetos (OO) \u2192 Performance \u2192 Integra\u00e7\u00f5es</li> <li>Desenvolvimento avan\u00e7ado? Veja CDS/AMDP \u2192 Testes \u2192 Security</li> </ol>"},{"location":"#como-usar-este-guia","title":"\ud83d\udca1 Como usar este guia","text":"<ul> <li>Use o menu lateral para navegar entre sec\u00e7\u00f5es</li> <li>Cada sec\u00e7\u00e3o tem um <code>index.md</code> introdut\u00f3rio e exemplos pr\u00e1ticos numerados</li> <li>Execute os exemplos no seu sistema SAP para aprender na pr\u00e1tica</li> <li>Os c\u00f3digos est\u00e3o prontos para copiar e adaptar</li> </ul> <p>Boa aprendizagem! \ud83c\udf93</p>"},{"location":"alvs/","title":"Tipos de ALV em ABAP","text":"<p>Esta sec\u00e7\u00e3o aborda os diferentes tipos de ALV (ABAP List Viewer) dispon\u00edveis em ABAP para apresenta\u00e7\u00e3o de dados.</p>"},{"location":"alvs/#o-que-e-alv","title":"\ud83d\udcca O que \u00e9 ALV?","text":"<p>ALV (ABAP List Viewer) \u00e9 uma ferramenta SAP para exibir dados de forma estruturada com funcionalidades autom\u00e1ticas como: - Ordena\u00e7\u00e3o - Filtros - Exporta\u00e7\u00e3o (Excel, PDF) - Totaliza\u00e7\u00f5es - Layout personaliz\u00e1vel</p>"},{"location":"alvs/#tipos-de-alv","title":"\ud83c\udfaf Tipos de ALV","text":""},{"location":"alvs/#1-alv-classico-function-modules","title":"1. ALV Cl\u00e1ssico (Function Modules)","text":"<ul> <li><code>REUSE_ALV_GRID_DISPLAY</code></li> <li><code>REUSE_ALV_LIST_DISPLAY</code></li> <li><code>REUSE_ALV_HIERSEQ_LIST_DISPLAY</code></li> </ul>"},{"location":"alvs/#2-alv-orientado-a-objetos","title":"2. ALV Orientado a Objetos","text":"<ul> <li><code>CL_SALV_TABLE</code> (simples e completo)</li> <li><code>CL_GUI_ALV_GRID</code> (com container)</li> </ul>"},{"location":"alvs/#3-alv-tree","title":"3. ALV Tree","text":"<ul> <li>Apresenta\u00e7\u00e3o hier\u00e1rquica de dados</li> </ul>"},{"location":"alvs/#4-alv-popup","title":"4. ALV Popup","text":"<ul> <li>Janelas modais com dados</li> </ul>"},{"location":"alvs/#5-alv-em-fullscreen","title":"5. ALV em Fullscreen","text":"<ul> <li>Ocupa\u00e7\u00e3o total do ecr\u00e3</li> </ul> <p>\u00cdndice de Exemplos: 1. ALV Cl\u00e1ssico Grid 2. ALV Cl\u00e1ssico List 3. ALV OO com CL_SALV_TABLE 4. ALV OO com CL_GUI_ALV_GRID 5. ALV Tree Hier\u00e1rquico 6. ALV Popup 7. ALV com Edi\u00e7\u00e3o 8. ALV com Eventos 9. ALV com Bot\u00f5es Customizados 10. ALV com Layout e Variantes</p>"},{"location":"alvs/#exemplos-rapidos-in-page","title":"\ud83e\udde9 Exemplos r\u00e1pidos (in-page)","text":"<p>Aqui est\u00e3o trechos de exemplo r\u00e1pidos para cada tipo de ALV. Mantive a estrutura com p\u00e1ginas separadas \u2014 clique em \"Ler mais\" para ver a explica\u00e7\u00e3o completa e exemplos maiores.</p>"},{"location":"alvs/#alv-classico-grid-trecho","title":"ALV Cl\u00e1ssico - Grid (trecho)","text":"<pre><code>REPORT z_alv_grid_classico.\n\nDATA: lt_sflight TYPE TABLE OF sflight,\n            lt_fieldcat TYPE slis_t_fieldcat_alv.\n\nSTART-OF-SELECTION.\n    SELECT * FROM sflight INTO TABLE lt_sflight UP TO 100 ROWS.\n    CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'\n        EXPORTING i_structure_name = 'SFLIGHT'\n        CHANGING  ct_fieldcat      = lt_fieldcat.\n    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'\n        EXPORTING it_fieldcat = lt_fieldcat\n        TABLES   t_outtab    = lt_sflight.\n</code></pre> <p>Ler mais \u00bb</p>"},{"location":"alvs/#alv-classico-list-trecho","title":"ALV Cl\u00e1ssico - List (trecho)","text":"<pre><code>REPORT z_alv_list_classico.\nDATA: lt_scarr TYPE TABLE OF scarr, lt_fieldcat TYPE slis_t_fieldcat_alv.\nSTART-OF-SELECTION.\n    SELECT * FROM scarr INTO TABLE lt_scarr.\n    CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE' EXPORTING i_structure_name = 'SCARR' CHANGING ct_fieldcat = lt_fieldcat.\n    CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY' EXPORTING it_fieldcat = lt_fieldcat TABLES t_outtab = lt_scarr.\n</code></pre> <p>Ler mais \u00bb</p>"},{"location":"alvs/#alv-oo-cl_salv_table-trecho","title":"ALV OO - CL_SALV_TABLE (trecho)","text":"<pre><code>DATA: lt_sflight TYPE TABLE OF sflight, lo_alv TYPE REF TO cl_salv_table.\nSTART-OF-SELECTION.\n    SELECT * FROM sflight INTO TABLE lt_sflight UP TO 100 ROWS.\n    TRY.\n            cl_salv_table=&gt;factory( IMPORTING r_salv_table = lo_alv CHANGING t_table = lt_sflight ).\n            lo_alv-&gt;display( ).\n    CATCH cx_salv_msg INTO DATA(lx_error).\n            MESSAGE lx_error-&gt;get_text( ) TYPE 'E'.\n    ENDTRY.\n</code></pre> <p>Ler mais \u00bb</p>"},{"location":"alvs/#alv-oo-cl_gui_alv_grid-trecho","title":"ALV OO - CL_GUI_ALV_GRID (trecho)","text":"<pre><code>DATA: lo_container TYPE REF TO cl_gui_custom_container, lo_alv TYPE REF TO cl_gui_alv_grid, lt_sflight TYPE TABLE OF sflight.\nCREATE OBJECT lo_container EXPORTING container_name = 'CONTAINER'.\nCREATE OBJECT lo_alv EXPORTING i_parent = lo_container.\nCALL METHOD lo_alv-&gt;set_table_for_first_display CHANGING it_outtab = lt_sflight.\n</code></pre> <p>Ler mais \u00bb</p>"},{"location":"alvs/#alv-tree-exemplo-dinamico-trecho","title":"ALV Tree - Exemplo din\u00e2mico (trecho)","text":"<p>O exemplo din\u00e2mico <code>Z_DYNAMIC_SALV_TREE</code> constr\u00f3i recursivamente uma \u00e1rvore a partir de qualquer estrutura (campos simples, estruturas internas e tabelas internas). Veja o exemplo completo na p\u00e1gina.</p> <p>Ler mais \u00bb</p> <p>Se quiser que algum destes trechos seja expandido (ex.: mostrar todo o exemplo do <code>Z_DYNAMIC_SALV_TREE</code> inline), digo e eu acrescento \u2014 por agora mantive trechos curtos na p\u00e1gina principal e deixei os exemplos completos nas p\u00e1ginas individuais.</p>"},{"location":"alvs/alv_botoes_custom/","title":"ALV com Bot\u00f5es Customizados","text":"<p>Adicionar bot\u00f5es pr\u00f3prios na toolbar do ALV.</p>"},{"location":"alvs/alv_botoes_custom/#com-cl_salv_table","title":"\ud83d\udd39 Com CL_SALV_TABLE","text":"<pre><code>DATA: lo_functions TYPE REF TO cl_salv_functions_list.\n\nlo_functions = lo_alv-&gt;get_functions( ).\nlo_functions-&gt;set_all( abap_true ).\n\n\" Adicionar bot\u00e3o customizado\nlo_functions-&gt;add_function(\n  name     = 'BTN_EXPORT'\n  icon     = '@49@'  \" \u00cdcone de exportar\n  text     = 'Exportar Sele\u00e7\u00e3o'\n  tooltip  = 'Exportar linhas selecionadas'\n  position = if_salv_c_function_position=&gt;right_of_salv_functions ).\n\n\" Capturar evento\nDATA: lo_events TYPE REF TO cl_salv_events_table.\nlo_events = lo_alv-&gt;get_event( ).\nSET HANDLER handle_user_command FOR lo_events.\n\nCLASS lcl_handler DEFINITION.\n  PUBLIC SECTION.\n    METHODS handle_user_command\n      FOR EVENT added_function OF cl_salv_events\n      IMPORTING e_salv_function.\nENDCLASS.\n\nCLASS lcl_handler IMPLEMENTATION.\n  METHOD handle_user_command.\n    CASE e_salv_function.\n      WHEN 'BTN_EXPORT'.\n        MESSAGE 'Bot\u00e3o Export clicado!' TYPE 'I'.\n    ENDCASE.\n  ENDMETHOD.\nENDCLASS.\n</code></pre>"},{"location":"alvs/alv_classico_grid/","title":"ALV Cl\u00e1ssico - Grid Display","text":"<p>O ALV Grid cl\u00e1ssico usa o function module <code>REUSE_ALV_GRID_DISPLAY</code>.</p>"},{"location":"alvs/alv_classico_grid/#exemplo-basico","title":"\ud83d\udd39 Exemplo B\u00e1sico","text":"<pre><code>REPORT z_alv_grid_classico.\n\nDATA: lt_sflight TYPE TABLE OF sflight,\n      lt_fieldcat TYPE slis_t_fieldcat_alv.\n\nSTART-OF-SELECTION.\n  \" Buscar dados\n  SELECT * FROM sflight INTO TABLE lt_sflight UP TO 100 ROWS.\n\n  \" Montar cat\u00e1logo de campos (autom\u00e1tico via estrutura)\n  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'\n    EXPORTING\n      i_structure_name = 'SFLIGHT'\n    CHANGING\n      ct_fieldcat      = lt_fieldcat.\n\n  \" Exibir ALV\n  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'\n    EXPORTING\n      it_fieldcat = lt_fieldcat\n    TABLES\n      t_outtab    = lt_sflight.\n</code></pre>"},{"location":"alvs/alv_classico_grid/#com-layout-customizado","title":"\ud83d\udd39 Com Layout Customizado","text":"<pre><code>DATA: ls_layout TYPE slis_layout_alv.\n\n\" Configurar layout\nls_layout-zebra = 'X'.              \" Linhas zebradas\nls_layout-colwidth_optimize = 'X'.  \" Otimizar largura das colunas\nls_layout-box_fieldname = 'SEL'.    \" Checkbox de sele\u00e7\u00e3o\n\nCALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'\n  EXPORTING\n    is_layout   = ls_layout\n    it_fieldcat = lt_fieldcat\n  TABLES\n    t_outtab    = lt_sflight.\n</code></pre>"},{"location":"alvs/alv_classico_grid/#parametros-uteis","title":"\ud83d\udca1 Par\u00e2metros \u00dateis","text":"<ul> <li><code>i_callback_program</code> \u2192 Nome do programa para eventos</li> <li><code>i_callback_user_command</code> \u2192 Rotina para comandos do utilizador</li> <li><code>i_callback_pf_status_set</code> \u2192 GUI Status customizado</li> </ul>"},{"location":"alvs/alv_classico_list/","title":"ALV Cl\u00e1ssico - List Display","text":"<p>Apresenta\u00e7\u00e3o em formato lista (menos funcionalidades que Grid).</p>"},{"location":"alvs/alv_classico_list/#exemplo","title":"\ud83d\udd39 Exemplo","text":"<pre><code>REPORT z_alv_list_classico.\n\nDATA: lt_scarr TYPE TABLE OF scarr,\n      lt_fieldcat TYPE slis_t_fieldcat_alv.\n\nSTART-OF-SELECTION.\n  SELECT * FROM scarr INTO TABLE lt_scarr.\n\n  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'\n    EXPORTING\n      i_structure_name = 'SCARR'\n    CHANGING\n      ct_fieldcat      = lt_fieldcat.\n\n  CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'\n    EXPORTING\n      it_fieldcat = lt_fieldcat\n    TABLES\n      t_outtab    = lt_scarr.\n</code></pre> <p>\ud83d\udca1 Menos usado que Grid, mas \u00fatil para reports simples.</p>"},{"location":"alvs/alv_editavel/","title":"ALV Edit\u00e1vel","text":"<p>Permitir edi\u00e7\u00e3o direta de dados no ALV.</p>"},{"location":"alvs/alv_editavel/#com-cl_gui_alv_grid","title":"\ud83d\udd39 Com CL_GUI_ALV_GRID","text":"<pre><code>DATA: lt_sflight TYPE TABLE OF sflight,\n      lo_alv     TYPE REF TO cl_gui_alv_grid,\n      lt_fieldcat TYPE lvc_t_fcat,\n      ls_layout  TYPE lvc_s_layo.\n\n\" ... criar container e dados ...\n\n\" Marcar campo como edit\u00e1vel no fieldcat\nLOOP AT lt_fieldcat ASSIGNING FIELD-SYMBOL(&lt;fs_fcat&gt;).\n  CASE &lt;fs_fcat&gt;-fieldname.\n    WHEN 'PRICE' OR 'CURRENCY'.\n      &lt;fs_fcat&gt;-edit = 'X'.  \" Permitir edi\u00e7\u00e3o\n  ENDCASE.\nENDLOOP.\n\n\" Layout para edi\u00e7\u00e3o\nls_layout-edit = 'X'.\n\nCALL METHOD lo_alv-&gt;set_table_for_first_display\n  EXPORTING\n    is_layout       = ls_layout\n  CHANGING\n    it_outtab       = lt_sflight\n    it_fieldcatalog = lt_fieldcat.\n</code></pre>"},{"location":"alvs/alv_editavel/#validar-dados-editados","title":"\ud83d\udd39 Validar Dados Editados","text":"<pre><code>\" Evento DATA_CHANGED\nSET HANDLER handle_data_changed FOR lo_alv.\n\nCLASS lcl_event_handler DEFINITION.\n  PUBLIC SECTION.\n    METHODS handle_data_changed\n      FOR EVENT data_changed OF cl_gui_alv_grid\n      IMPORTING er_data_changed.\nENDCLASS.\n\nCLASS lcl_event_handler IMPLEMENTATION.\n  METHOD handle_data_changed.\n    \" er_data_changed cont\u00e9m as altera\u00e7\u00f5es\n    LOOP AT er_data_changed-&gt;mt_good_cells INTO DATA(ls_cell).\n      \" Validar valor\n      IF ls_cell-value &lt; 0.\n        MESSAGE 'Pre\u00e7o n\u00e3o pode ser negativo' TYPE 'E'.\n      ENDIF.\n    ENDLOOP.\n  ENDMETHOD.\nENDCLASS.\n</code></pre>"},{"location":"alvs/alv_eventos/","title":"ALV com Eventos","text":"<p>Capturar a\u00e7\u00f5es do utilizador (clique duplo, bot\u00f5es, hotspots).</p>"},{"location":"alvs/alv_eventos/#evento-hotspot-click-cl_salv_table","title":"\ud83d\udd39 Evento Hotspot Click (CL_SALV_TABLE)","text":"<pre><code>DATA: lo_events TYPE REF TO cl_salv_events_table.\n\nlo_events = lo_alv-&gt;get_event( ).\nSET HANDLER handle_link_click FOR lo_events.\n\n\" ... na classe event handler ...\nCLASS lcl_handler DEFINITION.\n  PUBLIC SECTION.\n    METHODS handle_link_click\n      FOR EVENT link_click OF cl_salv_events_table\n      IMPORTING row column.\nENDCLASS.\n\nCLASS lcl_handler IMPLEMENTATION.\n  METHOD handle_link_click.\n    READ TABLE lt_sflight INDEX row INTO DATA(ls_flight).\n    MESSAGE |Clicaste em: { ls_flight-carrid }| TYPE 'I'.\n  ENDMETHOD.\nENDCLASS.\n</code></pre>"},{"location":"alvs/alv_eventos/#evento-user-command-classico","title":"\ud83d\udd39 Evento User Command (Cl\u00e1ssico)","text":"<pre><code>FORM user_command USING r_ucomm TYPE sy-ucomm\n                        rs_selfield TYPE slis_selfield.\n  CASE r_ucomm.\n    WHEN '&amp;IC1'.  \" Duplo clique\n      READ TABLE lt_sflight INDEX rs_selfield-tabindex INTO DATA(ls_line).\n      MESSAGE |Duplo clique: { ls_line-connid }| TYPE 'I'.\n  ENDCASE.\nENDFORM.\n</code></pre>"},{"location":"alvs/alv_layout_variantes/","title":"ALV com Layout e Variantes","text":"<p>Permitir que utilizadores guardem layouts personalizados.</p>"},{"location":"alvs/alv_layout_variantes/#com-cl_salv_table","title":"\ud83d\udd39 Com CL_SALV_TABLE","text":"<pre><code>DATA: lo_layout TYPE REF TO cl_salv_layout,\n      ls_key    TYPE salv_s_layout_key.\n\n\" Definir chave para guardar variantes\nls_key-report = sy-repid.\n\nlo_layout = lo_alv-&gt;get_layout( ).\nlo_layout-&gt;set_key( ls_key ).\nlo_layout-&gt;set_save_restriction( if_salv_c_layout=&gt;restrict_none ).  \" Permitir guardar\n\nlo_alv-&gt;display( ).\n</code></pre>"},{"location":"alvs/alv_layout_variantes/#layout-classico","title":"\ud83d\udd39 Layout Cl\u00e1ssico","text":"<pre><code>DATA: ls_variant TYPE disvariant.\n\nls_variant-report = sy-repid.\nls_variant-username = sy-uname.\n\nCALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'\n  EXPORTING\n    i_save          = 'A'  \" Permitir guardar variantes\n    is_variant      = ls_variant\n    it_fieldcat     = lt_fieldcat\n  TABLES\n    t_outtab        = lt_data.\n</code></pre> <p>\ud83d\udca1 Variantes permitem que cada utilizador configure o seu pr\u00f3prio layout (ordem de colunas, filtros, etc.).</p>"},{"location":"alvs/alv_oo_gui_grid/","title":"ALV OO - CL_GUI_ALV_GRID","text":"<p>ALV com container para embedding em Dynpros ou integra\u00e7\u00e3o avan\u00e7ada.</p>"},{"location":"alvs/alv_oo_gui_grid/#exemplo-completo","title":"\ud83d\udd39 Exemplo Completo","text":"<pre><code>REPORT z_alv_gui_grid.\n\nDATA: lo_container TYPE REF TO cl_gui_custom_container,\n      lo_alv       TYPE REF TO cl_gui_alv_grid,\n      lt_sflight   TYPE TABLE OF sflight,\n      lt_fieldcat  TYPE lvc_t_fcat,\n      ls_layout    TYPE lvc_s_layo.\n\nSTART-OF-SELECTION.\n  SELECT * FROM sflight INTO TABLE lt_sflight UP TO 100 ROWS.\n\n  \" Montar fieldcat\n  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'\n    EXPORTING\n      i_structure_name = 'SFLIGHT'\n    CHANGING\n      ct_fieldcat      = lt_fieldcat.\n\n  \" Layout\n  ls_layout-zebra = 'X'.\n  ls_layout-cwidth_opt = 'X'.\n\n  \" Criar container (em Dynpro seria ligado a um controlo)\n  CREATE OBJECT lo_container\n    EXPORTING\n      container_name = 'CONTAINER'.\n\n  \" Criar ALV Grid\n  CREATE OBJECT lo_alv\n    EXPORTING\n      i_parent = lo_container.\n\n  \" Exibir dados\n  CALL METHOD lo_alv-&gt;set_table_for_first_display\n    EXPORTING\n      is_layout       = ls_layout\n    CHANGING\n      it_outtab       = lt_sflight\n      it_fieldcatalog = lt_fieldcat.\n\n  CALL SCREEN 100.\n</code></pre>"},{"location":"alvs/alv_oo_gui_grid/#screen-100-dynpro","title":"\ud83d\udd39 Screen 100 (Dynpro)","text":"<ul> <li>Criar screen 100 na SE51</li> <li>Adicionar Custom Container chamado <code>CONTAINER</code></li> <li>PBO:</li> </ul> <pre><code>PROCESS BEFORE OUTPUT.\n  MODULE status_0100.\n</code></pre> <p>\ud83d\udca1 Usado quando precisas de controlo total sobre o ALV e integra\u00e7\u00e3o com Dynpros.</p>"},{"location":"alvs/alv_oo_salv_table/","title":"ALV OO - CL_SALV_TABLE","text":"<p>Abordagem moderna e simplificada para ALVs usando orienta\u00e7\u00e3o a objetos.</p>"},{"location":"alvs/alv_oo_salv_table/#exemplo-basico","title":"\ud83d\udd39 Exemplo B\u00e1sico","text":"<pre><code>REPORT z_alv_oo_salv.\n\nDATA: lt_sflight TYPE TABLE OF sflight,\n      lo_alv TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n  SELECT * FROM sflight INTO TABLE lt_sflight UP TO 100 ROWS.\n\n  TRY.\n      \" Factory method cria inst\u00e2ncia do ALV\n      cl_salv_table=&gt;factory(\n        IMPORTING r_salv_table = lo_alv\n        CHANGING  t_table      = lt_sflight ).\n\n      \" Exibir\n      lo_alv-&gt;display( ).\n\n    CATCH cx_salv_msg INTO DATA(lx_error).\n      MESSAGE lx_error-&gt;get_text( ) TYPE 'E'.\n  ENDTRY.\n</code></pre>"},{"location":"alvs/alv_oo_salv_table/#com-funcionalidades-ativadas","title":"\ud83d\udd39 Com Funcionalidades Ativadas","text":"<pre><code>DATA: lo_functions TYPE REF TO cl_salv_functions_list,\n      lo_columns   TYPE REF TO cl_salv_columns_table,\n      lo_display   TYPE REF TO cl_salv_display_settings.\n\n\" Ativar todas as fun\u00e7\u00f5es padr\u00e3o (Excel, layout, filtros, etc.)\nlo_functions = lo_alv-&gt;get_functions( ).\nlo_functions-&gt;set_all( abap_true ).\n\n\" Otimizar colunas\nlo_columns = lo_alv-&gt;get_columns( ).\nlo_columns-&gt;set_optimize( abap_true ).\n\n\" Configurar t\u00edtulo\nlo_display = lo_alv-&gt;get_display_settings( ).\nlo_display-&gt;set_list_header( 'Lista de Voos' ).\nlo_display-&gt;set_striped_pattern( abap_true ).  \" Zebrado\n\nlo_alv-&gt;display( ).\n</code></pre>"},{"location":"alvs/alv_oo_salv_table/#alterar-propriedades-de-colunas","title":"\ud83d\udd39 Alterar Propriedades de Colunas","text":"<pre><code>DATA: lo_column TYPE REF TO cl_salv_column_table.\n\nTRY.\n    \" Obter coluna espec\u00edfica\n    lo_column ?= lo_columns-&gt;get_column( 'PRICE' ).\n\n    \" Configurar\n    lo_column-&gt;set_short_text( 'Pre\u00e7o' ).\n    lo_column-&gt;set_medium_text( 'Pre\u00e7o do Voo' ).\n    lo_column-&gt;set_long_text( 'Pre\u00e7o Total do Voo' ).\n\n  CATCH cx_salv_not_found.\n    \" Coluna n\u00e3o encontrada\nENDTRY.\n</code></pre>"},{"location":"alvs/alv_oo_salv_table/#vantagens-do-cl_salv_table","title":"\ud83d\udca1 Vantagens do CL_SALV_TABLE","text":"<ul> <li>C\u00f3digo mais limpo e OO</li> <li>Funcionalidades autom\u00e1ticas (Export, Sort, Filter)</li> <li>Melhor manutenibilidade</li> </ul>"},{"location":"alvs/alv_popup/","title":"ALV Popup","text":"<p>Exibir ALV numa janela modal (popup).</p>"},{"location":"alvs/alv_popup/#exemplo-com-cl_salv_table","title":"\ud83d\udd39 Exemplo com CL_SALV_TABLE","text":"<pre><code>REPORT z_alv_popup.\n\nDATA: lt_scarr TYPE TABLE OF scarr,\n      lo_alv   TYPE REF TO cl_salv_table.\n\nSTART-OF-SELECTION.\n  SELECT * FROM scarr INTO TABLE lt_scarr.\n\n  TRY.\n      cl_salv_table=&gt;factory(\n        EXPORTING\n          list_display = abap_false   \" N\u00e3o fullscreen\n        IMPORTING\n          r_salv_table = lo_alv\n        CHANGING\n          t_table      = lt_scarr ).\n\n      \" Configurar como popup\n      lo_alv-&gt;set_screen_popup(\n        start_column = 10\n        end_column   = 100\n        start_line   = 5\n        end_line     = 20 ).\n\n      lo_alv-&gt;display( ).\n\n    CATCH cx_salv_msg.\n  ENDTRY.\n</code></pre>"},{"location":"alvs/alv_popup/#popup-com-reuse_alv_popup_to_select","title":"\ud83d\udd39 Popup com REUSE_ALV_POPUP_TO_SELECT","text":"<pre><code>DATA: lt_return TYPE TABLE OF scarr.\n\nCALL FUNCTION 'REUSE_ALV_POPUP_TO_SELECT'\n  EXPORTING\n    i_title               = 'Selecionar Companhia'\n    i_tabname             = 'SCARR'\n    i_structure_name      = 'SCARR'\n  IMPORTING\n    es_selfield           = DATA(ls_selected)\n  TABLES\n    t_outtab              = lt_scarr\n  EXCEPTIONS\n    program_error         = 1\n    OTHERS                = 2.\n\nIF sy-subrc = 0.\n  WRITE: / 'Selecionado:', ls_selected-value.\nENDIF.\n</code></pre>"},{"location":"alvs/alv_tree/","title":"ALV Tree - Hier\u00e1rquico","text":""},{"location":"alvs/alv_tree/#alv-tree-hierarquico_1","title":"ALV Tree - Hier\u00e1rquico","text":"<p>Apresenta\u00e7\u00e3o de dados em estrutura de \u00e1rvore (hierarquia pai-filho).</p>"},{"location":"alvs/alv_tree/#exemplo-com-cl_salv_tree","title":"\ud83d\udd39 Exemplo com CL_SALV_TREE","text":"<pre><code>REPORT z_alv_tree.\n\nDATA: lo_tree TYPE REF TO cl_salv_tree,\n      lt_data TYPE TABLE OF sflight.\n\nSTART-OF-SELECTION.\n  SELECT * FROM sflight INTO TABLE lt_data.\n\n  TRY.\n      cl_salv_tree=&gt;factory(\n        IMPORTING r_salv_tree = lo_tree\n        CHANGING  t_table     = lt_data ).\n\n      lo_tree-&gt;display( ).\n\n    CATCH cx_salv_error INTO DATA(lx_err).\n      MESSAGE lx_err-&gt;get_text( ) TYPE 'E'.\n  ENDTRY.\n</code></pre> <p>\ud83d\udca1 Ideal para estruturas como organogramas, BOMs ou \u00e1rvores de pastas.</p>"},{"location":"alvs/alv_tree/#exemplo-dinamico-z_dynamic_salv_tree","title":"\ud83d\udd39 Exemplo Din\u00e2mico: Z_DYNAMIC_SALV_TREE","text":"<p>Exemplo completo de um report ABAP que monta dinamicamente um SALV Tree a partir de qualquer estrutura, processando campos simples, estruturas internas e tabelas internas. \u00datil como refer\u00eancia para criar \u00e1rvores din\u00e2micas que refletem a estrutura de dados.</p> <pre><code>*&amp;---------------------------------------------------------------------*\n*&amp; Report Z_DYNAMIC_SALV_TREE\n*&amp;---------------------------------------------------------------------*\n*&amp; SALV Tree Din\u00e2mica - Processa qualquer estrutura automaticamente\n*&amp;---------------------------------------------------------------------*\nREPORT z_dynamic_salv_tree.\n\n*----------------------------------------------------------------------*\n* Estrutura para a Tree\n*----------------------------------------------------------------------*\nTYPES: BEGIN OF ty_tree_node,\n         field_name   TYPE string,\n         field_value  TYPE string,\n         field_type   TYPE string,\n       END OF ty_tree_node.\n\n*----------------------------------------------------------------------*\n* Declara\u00e7\u00f5es Globais\n*----------------------------------------------------------------------*\nDATA: gt_tree_data TYPE STANDARD TABLE OF ty_tree_node.\n\nDATA: go_tree      TYPE REF TO cl_salv_tree,\n      go_nodes     TYPE REF TO cl_salv_nodes,\n      go_node      TYPE REF TO cl_salv_node,\n      go_columns   TYPE REF TO cl_salv_columns_tree,\n      go_functions TYPE REF TO cl_salv_functions_tree.\n\n*----------------------------------------------------------------------*\n* START-OF-SELECTION\n*----------------------------------------------------------------------*\nSTART-OF-SELECTION.\n\n  \" Obter dados\n  DATA lv_os TYPE aufnr VALUE '200000000355'.\n  DATA(lo_so) = NEW zcl_wm_so( lv_os ).\n  DATA(ls_os) = zcl_wm_putorder_fill_body=&gt;get_put_order_data( lo_so ).\n\n  \" Criar SALV Tree\n  TRY.\n      CALL METHOD cl_salv_tree=&gt;factory\n        IMPORTING\n          r_salv_tree = go_tree\n        CHANGING\n          t_table     = gt_tree_data.\n    CATCH cx_salv_error INTO DATA(lx_error).\n      MESSAGE lx_error-&gt;get_text( ) TYPE 'I' DISPLAY LIKE 'E'.\n      RETURN.\n  ENDTRY.\n\n  \" Obter n\u00f3s\n  go_nodes = go_tree-&gt;get_nodes( ).\n\n  \" Construir \u00e1rvore recursivamente\n  PERFORM build_tree USING ls_os '' 0.\n\n  \" Configurar colunas\n  PERFORM configure_columns.\n\n  \" Ativar fun\u00e7\u00f5es\n  go_functions = go_tree-&gt;get_functions( ).\n  go_functions-&gt;set_all( abap_true ).\n\n  \" Colapsar todos os n\u00f3s\n  TRY.\n      go_nodes-&gt;collapse_all( ).\n    CATCH cx_salv_msg.\n  ENDTRY.\n\n  \" Exibir\n  go_tree-&gt;display( ).\n\n*----------------------------------------------------------------------*\n* FORM build_tree - Construir \u00e1rvore recursivamente\n*----------------------------------------------------------------------*\nFORM build_tree USING p_data       TYPE any\n                      p_parent_key TYPE salv_de_node_key\n                      p_level      TYPE i.\n\n  DATA: wa_node        TYPE ty_tree_node,\n        lv_current_key TYPE salv_de_node_key.\n\n  DATA(lo_type) = cl_abap_typedescr=&gt;describe_by_data( p_data ).\n\n  IF lo_type-&gt;kind &lt;&gt; cl_abap_typedescr=&gt;kind_struct.\n    RETURN.\n  ENDIF.\n\n  DATA(lt_comp) = CAST cl_abap_structdescr( lo_type )-&gt;components.\n\n  LOOP AT lt_comp ASSIGNING FIELD-SYMBOL(&lt;fs_comp&gt;).\n\n    \" Ignorar campos especiais\n    IF &lt;fs_comp&gt;-name = 'CONTROLLER' OR &lt;fs_comp&gt;-name = 'MANDT'.\n      CONTINUE.\n    ENDIF.\n\n    \" Obter valor do campo\n    FIELD-SYMBOLS: &lt;fs_value&gt; TYPE any.\n    ASSIGN COMPONENT &lt;fs_comp&gt;-name OF STRUCTURE p_data TO &lt;fs_value&gt;.\n\n    IF sy-subrc &lt;&gt; 0.\n      CONTINUE.\n    ENDIF.\n\n    CLEAR wa_node.\n    wa_node-field_name = &lt;fs_comp&gt;-name.\n\n    CASE &lt;fs_comp&gt;-type_kind.\n\n      \" ========== CAMPO SIMPLES ==========\n      WHEN cl_abap_typedescr=&gt;typekind_string OR\n           cl_abap_typedescr=&gt;typekind_char   OR\n           cl_abap_typedescr=&gt;typekind_num    OR\n           cl_abap_typedescr=&gt;typekind_int    OR\n           cl_abap_typedescr=&gt;typekind_int1   OR\n           cl_abap_typedescr=&gt;typekind_int2   OR\n           cl_abap_typedescr=&gt;typekind_packed OR\n           cl_abap_typedescr=&gt;typekind_date   OR\n           cl_abap_typedescr=&gt;typekind_time.\n\n        wa_node-field_value = &lt;fs_value&gt;.\n        wa_node-field_type = 'Campo'.\n\n        TRY.\n            go_node = go_nodes-&gt;add_node(\n              related_node = p_parent_key\n              relationship = cl_gui_column_tree=&gt;relat_last_child\n              data_row     = wa_node ).\n          CATCH cx_salv_msg.\n        ENDTRY.\n\n      \" ========== ESTRUTURA ==========\n      WHEN cl_abap_typedescr=&gt;typekind_struct1 OR\n           cl_abap_typedescr=&gt;typekind_struct2.\n\n        wa_node-field_value = '(Estrutura)'.\n        wa_node-field_type = 'Estrutura'.\n\n        TRY.\n            go_node = go_nodes-&gt;add_node(\n              related_node = p_parent_key\n              relationship = cl_gui_column_tree=&gt;relat_last_child\n              data_row     = wa_node ).\n            lv_current_key = go_node-&gt;get_key( ).\n          CATCH cx_salv_msg.\n            CONTINUE.\n        ENDTRY.\n\n        \" Chamada recursiva\n        DATA(lv_next_level) = p_level + 1.\n        PERFORM build_tree USING &lt;fs_value&gt; lv_current_key lv_next_level.\n\n      \" ========== TABELA ==========\n      WHEN cl_abap_typedescr=&gt;typekind_table.\n\n        FIELD-SYMBOLS: &lt;ft_table&gt; TYPE ANY TABLE.\n        ASSIGN &lt;fs_value&gt; TO &lt;ft_table&gt;.\n\n        DATA(lv_lines) = lines( &lt;ft_table&gt; ).\n        wa_node-field_value = |Tabela ({ lv_lines } linhas)|.\n        wa_node-field_type = 'Tabela'.\n\n        TRY.\n            go_node = go_nodes-&gt;add_node(\n              related_node = p_parent_key\n              relationship = cl_gui_column_tree=&gt;relat_last_child\n              data_row     = wa_node ).\n            lv_current_key = go_node-&gt;get_key( ).\n          CATCH cx_salv_msg.\n            CONTINUE.\n        ENDTRY.\n\n        \" Processar linhas\n        FIELD-SYMBOLS: &lt;fs_row&gt; TYPE any.\n        DATA: lv_row_counter TYPE i VALUE 0,\n              lv_row_key     TYPE salv_de_node_key.\n\n        LOOP AT &lt;ft_table&gt; ASSIGNING &lt;fs_row&gt;.\n          lv_row_counter = lv_row_counter + 1.\n\n          \" Criar n\u00f3 para a linha (sem adicionar como n\u00f3 vis\u00edvel)\n          \" Processar diretamente os campos da linha\n          DATA(lv_table_level) = p_level + 1.\n          PERFORM build_tree USING &lt;fs_row&gt; lv_current_key lv_table_level.\n        ENDLOOP.\n\n    ENDCASE.\n\n  ENDLOOP.\n\nENDFORM.\n\n*----------------------------------------------------------------------*\n* FORM configure_columns - Configurar colunas\n*----------------------------------------------------------------------*\nFORM configure_columns.\n\n  DATA: lo_column TYPE REF TO cl_salv_column_tree.\n\n  go_columns = go_tree-&gt;get_columns( ).\n  go_columns-&gt;set_optimize( abap_false ).\n\n  \" Definir largura da coluna de hierarquia (\u00edcones)\n  TRY.\n      go_tree-&gt;get_tree_settings( )-&gt;set_hierarchy_size( 8 ).\n    CATCH cx_salv_error.\n  ENDTRY.\n\n  \" Coluna FIELD_NAME\n  TRY.\n      lo_column ?= go_columns-&gt;get_column( 'FIELD_NAME' ).\n      lo_column-&gt;set_long_text( 'Campo' ).\n      lo_column-&gt;set_medium_text( 'Campo' ).\n      lo_column-&gt;set_short_text( 'Campo' ).\n      lo_column-&gt;set_output_length( 40 ).\n    CATCH cx_salv_not_found.\n  ENDTRY.\n\n  \" Coluna FIELD_VALUE\n  TRY.\n      lo_column ?= go_columns-&gt;get_column( 'FIELD_VALUE' ).\n      lo_column-&gt;set_long_text( 'Valor' ).\n      lo_column-&gt;set_medium_text( 'Valor' ).\n      lo_column-&gt;set_short_text( 'Valor' ).\n      lo_column-&gt;set_output_length( 80 ).\n    CATCH cx_salv_not_found.\n  ENDTRY.\n\n  \" Coluna FIELD_TYPE\n  TRY.\n      lo_column ?= go_columns-&gt;get_column( 'FIELD_TYPE' ).\n      lo_column-&gt;set_long_text( 'Tipo' ).\n      lo_column-&gt;set_medium_text( 'Tipo' ).\n      lo_column-&gt;set_short_text( 'Tipo' ).\n      lo_column-&gt;set_output_length( 12 ).\n    CATCH cx_salv_not_found.\n  ENDTRY.\n\nENDFORM.\n</code></pre>"},{"location":"cds_amdp/","title":"\ud83d\udd37 CDS e AMDP","text":"<p>Esta sec\u00e7\u00e3o apresenta Core Data Services (CDS) e ABAP Managed Database Procedures (AMDP) \u2014 tecnologias modernas para acesso e processamento de dados em SAP.</p>"},{"location":"cds_amdp/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Core Data Services (CDS Views)</li> <li>Annotations e metadata</li> <li>Associations e relacionamentos</li> <li>CDS com par\u00e2metros</li> <li>AMDP (procedimentos em SQLScript)</li> <li>Performance com pushdown para HANA</li> <li>Consumir CDS em programas ABAP</li> <li>Diferen\u00e7as entre CDS e views cl\u00e1ssicas</li> </ul>"},{"location":"cds_amdp/#o-que-sao-cds-views","title":"\ud83c\udfaf O que s\u00e3o CDS Views?","text":"<p>CDS Views s\u00e3o views sem\u00e2nticas definidas em linguagem DDL (Data Definition Language) que:</p> <ul> <li>Substituem views cl\u00e1ssicas (SE11)</li> <li>Suportam annotations (metadados)</li> <li>Permitem associations (navega\u00e7\u00e3o entre entidades)</li> <li>Otimizam performance (pushdown para DB)</li> <li>Integram-se nativamente com Fiori/OData</li> </ul>"},{"location":"cds_amdp/#exemplo-de-cds-view","title":"\ud83d\udca1 Exemplo de CDS View","text":""},{"location":"cds_amdp/#cds-simples","title":"CDS Simples","text":"<pre><code>@AbapCatalog.sqlViewName: 'ZV_FLIGHTS'\n@EndUserText.label: 'Voos e Companhias'\n@AccessControl.authorizationCheck: #CHECK\n\ndefine view Z_CDS_Flights as\n  select from sflight\n  association [0..1] to scarr as _Carrier \n    on $projection.carrid = _Carrier.carrid\n{\n  key carrid,\n  key connid,\n  key fldate,\n      price,\n      currency,\n\n      // Expor associa\u00e7\u00e3o\n      _Carrier\n}\n</code></pre>"},{"location":"cds_amdp/#consumir-em-abap","title":"Consumir em ABAP","text":"<pre><code>SELECT * FROM z_cds_flights\n  INTO TABLE @DATA(lt_flights)\n  UP TO 10 ROWS.\n\nLOOP AT lt_flights INTO DATA(ls_flight).\n  WRITE: / ls_flight-carrid, \n         ls_flight-connid, \n         ls_flight-price.\nENDLOOP.\n</code></pre>"},{"location":"cds_amdp/#associations","title":"\ud83d\udd17 Associations","text":"<p>Definir relacionamentos entre entidades sem fazer JOINs expl\u00edcitos.</p> <pre><code>define view Z_CDS_Orders as\n  select from vbak\n  association [0..*] to vbap as _Items\n    on $projection.vbeln = _Items.vbeln\n  association [0..1] to kna1 as _Customer\n    on $projection.kunnr = _Customer.kunnr\n{\n  key vbeln,\n      kunnr,\n      vkorg,\n      vtweg,\n\n      // Expor associa\u00e7\u00f5es\n      _Items,\n      _Customer\n}\n</code></pre> <p>Usar em ABAP:</p> <pre><code>SELECT * FROM z_cds_orders\n  INTO TABLE @DATA(lt_orders).\n\nLOOP AT lt_orders INTO DATA(ls_order).\n  \" Navegar pela associa\u00e7\u00e3o\n  SELECT * FROM @ls_order-_Items AS items\n    INTO TABLE @DATA(lt_items).\n\n  WRITE: / 'Ordem:', ls_order-vbeln, \n         'Itens:', lines( lt_items ).\nENDLOOP.\n</code></pre>"},{"location":"cds_amdp/#annotations-comuns","title":"\ud83c\udfa8 Annotations Comuns","text":"Annotation Descri\u00e7\u00e3o <code>@AbapCatalog.sqlViewName</code> Nome da view SQL gerada <code>@EndUserText.label</code> Descri\u00e7\u00e3o da view <code>@AccessControl.authorizationCheck</code> Controlo de acesso <code>@Analytics.dataCategory</code> Tipo de dados (dimens\u00e3o/facto) <code>@ObjectModel.usageType</code> Uso previsto <code>@VDM.viewType</code> Tipo de view no VDM"},{"location":"cds_amdp/#cds-com-parametros","title":"\ud83d\udd22 CDS com Par\u00e2metros","text":"<pre><code>@AbapCatalog.sqlViewName: 'ZV_FLIGHTS_PARAM'\n@EndUserText.label: 'Voos por Companhia'\n\ndefine view Z_CDS_Flights_Param\n  with parameters\n    p_carrid : s_carr_id\nas\n  select from sflight\n{\n  key carrid,\n  key connid,\n  key fldate,\n      price\n}\nwhere carrid = :p_carrid\n</code></pre> <p>Usar em ABAP:</p> <pre><code>SELECT * FROM z_cds_flights_param( p_carrid = 'LH' )\n  INTO TABLE @DATA(lt_flights).\n</code></pre>"},{"location":"cds_amdp/#amdp-abap-managed-database-procedures","title":"\u26a1 AMDP (ABAP Managed Database Procedures)","text":"<p>Executar SQLScript nativo diretamente na base de dados (HANA).</p>"},{"location":"cds_amdp/#exemplo-amdp","title":"Exemplo AMDP","text":"<pre><code>CLASS zcl_amdp_example DEFINITION PUBLIC.\n  PUBLIC SECTION.\n    INTERFACES if_amdp_marker_hdb.\n\n    CLASS-METHODS get_top_flights\n      IMPORTING VALUE(iv_carrid) TYPE s_carr_id\n                VALUE(iv_limit)  TYPE i\n      EXPORTING VALUE(et_result) TYPE tt_sflight.\nENDCLASS.\n\nCLASS zcl_amdp_example IMPLEMENTATION.\n  METHOD get_top_flights BY DATABASE PROCEDURE \n    FOR HDB LANGUAGE SQLSCRIPT\n    OPTIONS READ-ONLY\n    USING sflight.\n\n    et_result = SELECT carrid, connid, fldate, price\n                FROM sflight\n                WHERE carrid = :iv_carrid\n                ORDER BY price DESC\n                LIMIT :iv_limit;\n  ENDMETHOD.\nENDCLASS.\n</code></pre> <p>Usar:</p> <pre><code>DATA: lt_flights TYPE tt_sflight.\n\nzcl_amdp_example=&gt;get_top_flights(\n  EXPORTING\n    iv_carrid = 'LH'\n    iv_limit  = 10\n  IMPORTING\n    et_result = lt_flights ).\n</code></pre>"},{"location":"cds_amdp/#cds-vs-views-classicas","title":"\ud83d\udcca CDS vs. Views Cl\u00e1ssicas","text":"Caracter\u00edstica CDS View View Cl\u00e1ssica (SE11) Linguagem DDL (SQL-like) ABAP Dictionary Associations \u2705 Sim \u274c N\u00e3o Annotations \u2705 Sim \u274c N\u00e3o Par\u00e2metros \u2705 Sim \u274c N\u00e3o Performance HANA \u2705 Otimizado \u26a0\ufe0f Limitado OData/Fiori \u2705 Nativo \u26a0\ufe0f Requer adapter"},{"location":"cds_amdp/#boas-praticas","title":"\ud83d\ude80 Boas Pr\u00e1ticas","text":""},{"location":"cds_amdp/#fazer","title":"\u2705 Fazer","text":"<ol> <li>Naming convention: Z_CDS_ ou Z_I_ (interface) / Z_C_ (consumption)</li> <li>Usar associations em vez de JOINs repetidos</li> <li>Annotations completas para metadados</li> <li>Testar performance com SE16 / Data Preview</li> <li>Documentar prop\u00f3sito da view</li> </ol>"},{"location":"cds_amdp/#evitar","title":"\u274c Evitar","text":"<ol> <li>L\u00f3gica complexa em CDS (usar AMDP)</li> <li>Muitas camadas de views aninhadas</li> <li>SELECTs sem WHERE em CDS com dados grandes</li> <li>Esquecer <code>@AccessControl.authorizationCheck</code></li> </ol>"},{"location":"cds_amdp/#exercicios-praticos","title":"\ud83d\udcda Exerc\u00edcios Pr\u00e1ticos","text":"<p>Exerc\u00edcios dispon\u00edveis (ser\u00e3o desenvolvidos): - <code>ex01.md</code> \u2192 CDS b\u00e1sica - <code>ex02.md</code> \u2192 CDS com associations - <code>ex03.md</code> \u2192 CDS com par\u00e2metros - <code>ex04.md</code> \u2192 AMDP simples - <code>ex05.md</code> \u2192 AMDP com aggregations - <code>ex06-ex10.md</code> \u2192 Casos avan\u00e7ados</p>"},{"location":"cds_amdp/#ferramentas","title":"\ud83d\udee0\ufe0f Ferramentas","text":""},{"location":"cds_amdp/#criar-cds-view","title":"Criar CDS View","text":"<ol> <li>Eclipse (ADT) \u2192 New \u2192 Core Data Services \u2192 Data Definition</li> <li>Ou SE11 (limitado, recomenda-se ADT)</li> </ol>"},{"location":"cds_amdp/#testar-cds","title":"Testar CDS","text":"<ul> <li>Data Preview no Eclipse (F8)</li> <li>SE16 com nome da SQL view</li> </ul>"},{"location":"cds_amdp/#ativar-cds-para-odata","title":"Ativar CDS para OData","text":"<p>Annotation <code>@OData.publish: true</code></p>"},{"location":"cds_amdp/#proximos-passos","title":"\ud83d\udd17 Pr\u00f3ximos Passos","text":"<ol> <li>Leia CDS View</li> <li>Instale ABAP Development Tools (ADT) no Eclipse</li> <li>Crie uma CDS simples</li> <li>Experimente associations</li> <li>Teste AMDP se tiver HANA</li> <li>Explore SQL para otimizar queries</li> </ol>"},{"location":"cds_amdp/cds_view/","title":"CDS View","text":"<pre><code>@AbapCatalog.sqlViewName: 'ZV_FLIGHTS'\n@EndUserText.label: 'Voos e Companhias'\ndefine view ZCDS_Flights as\n  select from sflight\n  association [0..1] to scarr as _Carrier on $projection.carrid = _Carrier.carrid\n{\n  key sflight.carrid,\n  key sflight.connid,\n  sflight.price,\n  _Carrier.carrname\n}\n</code></pre>"},{"location":"debug/","title":"\ud83d\udc1e Debug e An\u00e1lise","text":"<p>Ferramentas e t\u00e9cnicas para depurar programas ABAP, usar breakpoints e analisar o comportamento em tempo de execu\u00e7\u00e3o.</p>"},{"location":"debug/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Ativar e usar o debugger cl\u00e1ssico e novo</li> <li>Tipos de breakpoints (est\u00e1ticos, din\u00e2micos, condicionais)</li> <li>An\u00e1lise de vari\u00e1veis e tabelas internas</li> <li>Watchpoints para detetar mudan\u00e7as em campos</li> <li>Call Stack e navega\u00e7\u00e3o entre chamadas</li> <li>Debugging de jobs em background</li> <li>An\u00e1lise de dumps (ST22)</li> <li>Runtime Analysis (SAT, SE30)</li> </ul>"},{"location":"debug/#tipos-de-debug","title":"\ud83c\udfaf Tipos de Debug","text":""},{"location":"debug/#1-breakpoint-estatico","title":"1\ufe0f\u20e3 Breakpoint Est\u00e1tico","text":"<p>Inserir <code>BREAK-POINT</code> diretamente no c\u00f3digo.</p> <p>Exemplo:</p> <pre><code>DATA lv_valor TYPE i VALUE 10.\nBREAK-POINT.  \" \u2190 Execu\u00e7\u00e3o para aqui\nlv_valor = lv_valor * 2.\nWRITE: / lv_valor.\n</code></pre>"},{"location":"debug/#2-breakpoint-dinamico","title":"2\ufe0f\u20e3 Breakpoint Din\u00e2mico","text":"<p>Definir na GUI sem alterar c\u00f3digo (F7 ou duplo clique na linha).</p>"},{"location":"debug/#3-breakpoint-condicional","title":"3\ufe0f\u20e3 Breakpoint Condicional","text":"<p>Para apenas quando uma condi\u00e7\u00e3o \u00e9 verdadeira.</p> <pre><code>\" No debugger: adicionar condi\u00e7\u00e3o ao breakpoint\n\" Exemplo: lv_contador &gt; 100\n</code></pre>"},{"location":"debug/#4-watchpoint","title":"4\ufe0f\u20e3 Watchpoint","text":"<p>Monitorizar mudan\u00e7as em vari\u00e1veis espec\u00edficas.</p>"},{"location":"debug/#ferramentas-de-debug","title":"\ud83d\udee0\ufe0f Ferramentas de Debug","text":""},{"location":"debug/#debugger-classico","title":"Debugger Cl\u00e1ssico","text":"<ul> <li><code>/h</code> antes de executar o programa</li> <li>F5 \u2192 Step into (entrar em m\u00e9todo)</li> <li>F6 \u2192 Step over (executar linha)</li> <li>F7 \u2192 Return (voltar ao chamador)</li> <li>F8 \u2192 Continue (at\u00e9 pr\u00f3ximo breakpoint)</li> </ul>"},{"location":"debug/#novo-debugger","title":"Novo Debugger","text":"<ul> <li>Mais visual e com abas</li> <li>Melhor para an\u00e1lise de objetos</li> <li>Ativado por padr\u00e3o em SAP GUI recentes</li> </ul>"},{"location":"debug/#analise-de-dumps-st22","title":"An\u00e1lise de Dumps (ST22)","text":"<ul> <li>Ver erros em runtime</li> <li>Call stack completo</li> <li>Valores de vari\u00e1veis no momento do erro</li> </ul>"},{"location":"debug/#runtime-analysis-sat","title":"Runtime Analysis (SAT)","text":"<ul> <li>Medir performance do c\u00f3digo</li> <li>Identificar gargalos</li> <li>Ver tempo gasto por m\u00e9todo/fun\u00e7\u00e3o</li> </ul>"},{"location":"debug/#tutoriais","title":"\ud83d\udcda Tutoriais","text":""},{"location":"debug/#breakpoints","title":"Breakpoints","text":"<p>Guia completo sobre tipos e uso de breakpoints.</p>"},{"location":"debug/#exercicios-praticos","title":"Exerc\u00edcios Pr\u00e1ticos","text":"<ul> <li><code>ex01.md</code> \u2192 Debug b\u00e1sico</li> <li><code>ex02.md</code> \u2192 Watchpoints</li> <li><code>ex03.md</code> \u2192 Debug em LOOPs</li> <li><code>ex04.md</code> \u2192 An\u00e1lise de dumps</li> <li><code>ex05.md</code> \u2192 Runtime analysis</li> </ul>"},{"location":"debug/#exemplo-pratico","title":"\ud83d\udca1 Exemplo Pr\u00e1tico","text":"<pre><code>REPORT z_debug_demo.\n\nDATA: lt_voos TYPE TABLE OF sflight,\n      lv_soma TYPE p DECIMALS 2.\n\nSTART-OF-SELECTION.\n\n  \" \u2705 Colocar breakpoint aqui (F7)\n  SELECT * FROM sflight INTO TABLE lt_voos UP TO 100 ROWS.\n\n  LOOP AT lt_voos INTO DATA(ls_voo).\n    lv_soma = lv_soma + ls_voo-price.\n\n    \" \u2705 Breakpoint condicional: ls_voo-price &gt; 1000\n    IF ls_voo-price &gt; 1000.\n      WRITE: / |Voo caro: { ls_voo-carrid } { ls_voo-connid }|.\n    ENDIF.\n  ENDLOOP.\n\n  WRITE: / |Soma total: { lv_soma }|.\n</code></pre>"},{"location":"debug/#como-debugar-este-codigo","title":"Como debugar este c\u00f3digo:","text":"<ol> <li>Executar com <code>/h</code> ou F7 na primeira linha</li> <li>Usar F6 para ir linha a linha</li> <li>Inspecionar <code>lt_voos</code> na aba \"Vari\u00e1veis\"</li> <li>Adicionar watchpoint em <code>lv_soma</code></li> <li>Usar F8 para continuar at\u00e9 ao pr\u00f3ximo breakpoint</li> </ol>"},{"location":"debug/#boas-praticas","title":"\ud83d\udea8 Boas Pr\u00e1ticas","text":""},{"location":"debug/#fazer","title":"\u2705 Fazer","text":"<ul> <li>Remover <code>BREAK-POINT</code> antes de transportar c\u00f3digo</li> <li>Usar breakpoints condicionais para LOOPs grandes</li> <li>Usar watchpoints para rastrear mudan\u00e7as inesperadas</li> <li>Analisar ST22 para entender erros</li> </ul>"},{"location":"debug/#evitar","title":"\u274c Evitar","text":"<ul> <li>Deixar <code>BREAK-POINT</code> em c\u00f3digo produtivo</li> <li>Debugar sem ter hip\u00f3teses sobre o problema</li> <li>Ignorar o call stack</li> </ul>"},{"location":"debug/#proximos-passos","title":"\ud83d\udd17 Pr\u00f3ximos Passos","text":"<ol> <li>Leia Breakpoints</li> <li>Pratique com programas simples</li> <li>Experimente os exerc\u00edcios <code>ex01.md</code> a <code>ex05.md</code></li> <li>Aprenda Performance para otimizar c\u00f3digo</li> </ol>"},{"location":"debug/breakpoint/","title":"Breakpoints","text":"<pre><code>BREAK-POINT.\nWRITE: / 'Execu\u00e7\u00e3o parada para an\u00e1lise.'.\n</code></pre>"},{"location":"fundamentos/","title":"\ud83e\udde9 Fundamentos ABAP","text":"<p>Esta sec\u00e7\u00e3o introduz os conceitos fundamentais da linguagem ABAP \u2014 a base essencial de todo o desenvolvimento SAP.</p>"},{"location":"fundamentos/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Tipos de dados primitivos e complexos</li> <li>Declara\u00e7\u00e3o e uso de vari\u00e1veis e constantes</li> <li>Trabalhar com tabelas internas (arrays ABAP)</li> <li>Field-symbols e refer\u00eancias de dados</li> <li>Estruturas e tipos customizados</li> <li>Criar ecr\u00e3s de sele\u00e7\u00e3o b\u00e1sicos</li> <li>Tratamento de exce\u00e7\u00f5es com TRY/CATCH</li> </ul>"},{"location":"fundamentos/#ordem-de-aprendizagem","title":"\ud83c\udfaf Ordem de Aprendizagem","text":""},{"location":"fundamentos/#1-tipos-de-dados","title":"1\ufe0f\u20e3 Tipos de Dados","text":"<p>Tipos elementares: <code>i</code>, <code>p</code>, <code>c</code>, <code>string</code>, <code>d</code>, <code>t</code> e como us\u00e1-los.</p>"},{"location":"fundamentos/#2-variaveis-e-constantes","title":"2\ufe0f\u20e3 Vari\u00e1veis e Constantes","text":"<p>Declara\u00e7\u00e3o com <code>DATA</code>, <code>CONSTANTS</code> e boas pr\u00e1ticas de nomenclatura.</p>"},{"location":"fundamentos/#3-tabelas-internas","title":"3\ufe0f\u20e3 Tabelas Internas","text":"<p>Como criar, manipular e iterar sobre cole\u00e7\u00f5es de dados em mem\u00f3ria.</p>"},{"location":"fundamentos/#4-estruturas","title":"4\ufe0f\u20e3 Estruturas","text":"<p>Agrupar campos relacionados numa \u00fanica entidade.</p>"},{"location":"fundamentos/#5-field-symbols-e-referencias","title":"5\ufe0f\u20e3 Field-Symbols e Refer\u00eancias","text":"<p>Apontadores e refer\u00eancias din\u00e2micas para dados.</p>"},{"location":"fundamentos/#6-ecras-de-selecao","title":"6\ufe0f\u20e3 Ecr\u00e3s de Sele\u00e7\u00e3o","text":"<p>Criar interfaces simples para entrada de par\u00e2metros.</p>"},{"location":"fundamentos/#7-tratamento-de-excecoes","title":"7\ufe0f\u20e3 Tratamento de Exce\u00e7\u00f5es","text":"<p>Gerir erros de forma estruturada com <code>TRY...CATCH</code>.</p>"},{"location":"fundamentos/#8-tipos-customizados","title":"8\ufe0f\u20e3 Tipos Customizados","text":"<p>Definir tipos pr\u00f3prios localmente ou globalmente.</p>"},{"location":"fundamentos/#exemplo-rapido","title":"\ud83d\udca1 Exemplo R\u00e1pido","text":"<pre><code>REPORT z_fundamentos_demo.\n\n\" Declarar vari\u00e1veis\nDATA: lv_nome  TYPE string VALUE 'Bruno',\n      lv_idade TYPE i VALUE 25.\n\n\" Tabela interna\nTYPES: BEGIN OF ty_pessoa,\n         nome  TYPE string,\n         idade TYPE i,\n       END OF ty_pessoa.\n\nDATA lt_pessoas TYPE TABLE OF ty_pessoa.\n\n\" Adicionar dados\nAPPEND VALUE #( nome = lv_nome idade = lv_idade ) TO lt_pessoas.\nAPPEND VALUE #( nome = 'Ana' idade = 30 ) TO lt_pessoas.\n\n\" Iterar\nLOOP AT lt_pessoas INTO DATA(ls_pessoa).\n  WRITE: / |{ ls_pessoa-nome } tem { ls_pessoa-idade } anos|.\nENDLOOP.\n</code></pre>"},{"location":"fundamentos/#proximos-passos","title":"\ud83d\ude80 Pr\u00f3ximos Passos","text":"<ol> <li>Comece por Tipos de Dados</li> <li>Siga a ordem num\u00e9rica acima</li> <li>Execute os exemplos no seu sistema SAP</li> <li>Depois avance para SQL ABAP</li> </ol>"},{"location":"fundamentos/estruturas/","title":"Estruturas em ABAP","text":"<p>As estruturas agrupam m\u00faltiplos campos de tipos diferentes sob um \u00fanico nome.</p>"},{"location":"fundamentos/estruturas/#exemplo","title":"\ud83d\udd39 Exemplo","text":"<pre><code>TYPES: BEGIN OF ty_aluno,\n         nome TYPE string,\n         idade TYPE i,\n         curso TYPE string,\n       END OF ty_aluno.\n\nDATA ls_aluno TYPE ty_aluno.\nls_aluno-nome = 'Cristiano'.\nls_aluno-idade = 21.\nls_aluno-curso = 'Engenharia'.\n\nWRITE: / ls_aluno-nome, ls_aluno-curso.\n</code></pre> <p>\ud83d\udca1 Estruturas s\u00e3o essenciais para tabelas internas (linhas s\u00e3o do tipo de estrutura).  </p>"},{"location":"fundamentos/field_symbols_refs/","title":"Field Symbols e Data References","text":"<p>Usados para apontar para endere\u00e7os de mem\u00f3ria dinamicamente (sem copiar dados).</p>"},{"location":"fundamentos/field_symbols_refs/#field-symbols","title":"\ud83d\udd39 Field-Symbols","text":"<pre><code>DATA lv_valor TYPE i VALUE 10.\nFIELD-SYMBOLS &lt;fs&gt; TYPE i.\nASSIGN lv_valor TO &lt;fs&gt;.\n\n&lt;fs&gt; = &lt;fs&gt; + 5.\nWRITE: / lv_valor. \" 15\n</code></pre>"},{"location":"fundamentos/field_symbols_refs/#data-references","title":"\ud83d\udd39 Data References","text":"<pre><code>DATA lr_valor TYPE REF TO i.\nCREATE DATA lr_valor.\nlr_valor-&gt;* = 100.\nWRITE: / lr_valor-&gt;*.\n</code></pre>"},{"location":"fundamentos/field_symbols_refs/#quando-usar","title":"\ud83d\udca1 Quando usar","text":"<ul> <li><code>FIELD-SYMBOLS</code> \u2192 apontar para vari\u00e1veis/tabelas existentes  </li> <li><code>REF TO</code> \u2192 criar refer\u00eancias novas em tempo de execu\u00e7\u00e3o  </li> </ul>"},{"location":"fundamentos/select_screen_basico/","title":"Ecr\u00e3 de Sele\u00e7\u00e3o (Selection Screen)","text":"<p>Permite criar uma interface simples de entrada de par\u00e2metros.</p>"},{"location":"fundamentos/select_screen_basico/#exemplo","title":"\ud83d\udd39 Exemplo","text":"<pre><code>REPORT z_demo_select.\n\nPARAMETERS p_carr TYPE s_carr_id DEFAULT 'LH'.\nSELECT-OPTIONS so_price FOR sflight-price.\n\nSELECT * FROM sflight\n  INTO TABLE @DATA(lt)\n  WHERE carrid = @p_carr AND price IN @so_price.\n\nWRITE: / lines( lt ), 'registos encontrados'.\n</code></pre>"},{"location":"fundamentos/tabelas_internas/","title":"Tabelas Internas","text":"<p>Tabelas internas s\u00e3o cole\u00e7\u00f5es de linhas em mem\u00f3ria \u2014 o equivalente ABAP a arrays ou listas.</p>"},{"location":"fundamentos/tabelas_internas/#exemplo-basico","title":"\ud83d\udd39 Exemplo b\u00e1sico","text":"<pre><code>TYPES: BEGIN OF ty_voo,\n         carrid TYPE s_carr_id,\n         connid TYPE s_conn_id,\n       END OF ty_voo.\n\nDATA lt_voos TYPE TABLE OF ty_voo.\nAPPEND VALUE #( carrid = 'LH' connid = '0400' ) TO lt_voos.\nAPPEND VALUE #( carrid = 'AA' connid = '0010' ) TO lt_voos.\n\nLOOP AT lt_voos INTO DATA(ls_voo).\n  WRITE: / ls_voo-carrid, ls_voo-connid.\nENDLOOP.\n</code></pre>"},{"location":"fundamentos/tabelas_internas/#tipos-de-tabelas","title":"\ud83d\udd39 Tipos de tabelas","text":"Tipo Descri\u00e7\u00e3o <code>STANDARD TABLE</code> Ordem indefinida (acesso sequencial) <code>SORTED TABLE</code> Ordenada por chave (acesso bin\u00e1rio) <code>HASHED TABLE</code> Indexada por hash (acesso direto r\u00e1pido) <p>\ud83d\udca1 Usa <code>READ TABLE ... WITH KEY</code> para procurar elementos espec\u00edficos:</p> <pre><code>READ TABLE lt_voos INTO DATA(ls) WITH KEY carrid = 'LH'.\nIF sy-subrc = 0.\n  WRITE: / 'Encontrado', ls-connid.\nENDIF.\n</code></pre>"},{"location":"fundamentos/tipos_customizados/","title":"Tipos Customizados","text":"<p>Podem ser definidos localmente (no programa) ou globalmente (via SE11).</p>"},{"location":"fundamentos/tipos_customizados/#definicao-local","title":"\ud83d\udd39 Defini\u00e7\u00e3o local","text":"<pre><code>TYPES: BEGIN OF ty_cliente,\n         id_cliente TYPE i,\n         nome       TYPE string,\n         cidade     TYPE string,\n       END OF ty_cliente.\n\nDATA ls_cliente TYPE ty_cliente VALUE #( id_cliente = 1 nome = 'Bruno' cidade = 'Porto' ).\nWRITE: / ls_cliente-nome.\n</code></pre> <p>\ud83d\udca1 Tipos customizados tornam o c\u00f3digo mais organizado e reutiliz\u00e1vel.</p>"},{"location":"fundamentos/tipos_de_dados/","title":"Tipos de Dados em ABAP","text":"<p>Os tipos de dados definem o formato e a natureza da informa\u00e7\u00e3o guardada numa vari\u00e1vel.</p>"},{"location":"fundamentos/tipos_de_dados/#tipos-elementares","title":"\ud83d\udd39 Tipos Elementares","text":"<pre><code>DATA: lv_i    TYPE i VALUE 42,          \" Inteiro\n      lv_p    TYPE p DECIMALS 2 VALUE '123.45',  \" Decimal (packed)\n      lv_c    TYPE c LENGTH 10 VALUE 'Texto',    \" Cadeia de caracteres fixa\n      lv_d    TYPE d VALUE sy-datum,             \" Data (YYYYMMDD)\n      lv_t    TYPE t VALUE sy-uzeit,             \" Hora (HHMMSS)\n      lv_str  TYPE string VALUE 'ABAP moderno'.  \" Cadeia din\u00e2mica\nWRITE: / lv_i, lv_p, lv_c, lv_d, lv_t, lv_str.\n</code></pre>"},{"location":"fundamentos/tipos_de_dados/#explicacao","title":"\ud83d\udd39 Explica\u00e7\u00e3o","text":"<ul> <li><code>TYPE i</code>: inteiro (4 bytes)</li> <li><code>TYPE p</code>: n\u00famero decimal (com precis\u00e3o)</li> <li><code>TYPE c</code>: string de comprimento fixo</li> <li><code>TYPE string</code>: string de comprimento vari\u00e1vel</li> <li><code>TYPE d</code> / <code>TYPE t</code>: data e hora, respetivamente</li> </ul>"},{"location":"fundamentos/tipos_de_dados/#nota","title":"\ud83d\udca1 Nota","text":"<p>Usa <code>TYPE</code> quando defines uma vari\u00e1vel (declara\u00e7\u00e3o impl\u00edcita) e <code>LIKE</code> para herdar o tipo de outro campo ou estrutura:</p> <pre><code>DATA lv_preco LIKE sflight-price.\n</code></pre>"},{"location":"fundamentos/variaveis_constantes/","title":"Vari\u00e1veis e Constantes","text":"<p>Vari\u00e1veis armazenam valores tempor\u00e1rios. Constantes mant\u00eam valores fixos durante toda a execu\u00e7\u00e3o do programa.</p>"},{"location":"fundamentos/variaveis_constantes/#declaracao-basica","title":"\ud83d\udd39 Declara\u00e7\u00e3o b\u00e1sica","text":"<pre><code>DATA lv_nome TYPE string VALUE 'Bruno'.\nDATA lv_idade TYPE i VALUE 25.\n\nWRITE: / |Nome: { lv_nome }|, / |Idade: { lv_idade }|.\n</code></pre>"},{"location":"fundamentos/variaveis_constantes/#constantes","title":"\ud83d\udd39 Constantes","text":"<pre><code>CONSTANTS:\n  lc_pi TYPE decfloat16 VALUE '3.1415926535',\n  lc_texto TYPE string VALUE 'Constante imut\u00e1vel'.\n\nWRITE: / lc_pi, lc_texto.\n</code></pre>"},{"location":"fundamentos/variaveis_constantes/#conversoes-de-tipo","title":"\ud83d\udd39 Convers\u00f5es de tipo","text":"<pre><code>DATA(lv_texto) = '123'.\nDATA(lv_numero) = lv_texto.\nWRITE: / lv_numero + 1.\n</code></pre> <p>\ud83d\udca1 Boas pr\u00e1ticas - Usa nomes descritivos (<code>lv_</code> = local variable, <code>lc_</code> = local constant) - Evita valores m\u00e1gicos: cria constantes nomeadas.</p>"},{"location":"integracoes/","title":"\ud83d\udd17 Integra\u00e7\u00f5es e RFCs","text":"<p>Exemplos de integra\u00e7\u00e3o com SAP e servi\u00e7os externos: BAPIs, RFCs, IDocs e chamadas HTTP/REST.</p>"},{"location":"integracoes/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Chamar BAPIs (Business Application Programming Interfaces)</li> <li>Executar RFCs (Remote Function Calls)</li> <li>Trabalhar com IDocs (Intermediate Documents)</li> <li>Consumir APIs REST/HTTP externas</li> <li>Enviar e receber dados JSON/XML</li> <li>Integra\u00e7\u00e3o com sistemas n\u00e3o-SAP</li> <li>OData services</li> <li>Web Services (SOAP)</li> </ul>"},{"location":"integracoes/#tipos-de-integracao","title":"\ud83c\udfaf Tipos de Integra\u00e7\u00e3o","text":""},{"location":"integracoes/#1-bapis","title":"1\ufe0f\u20e3 BAPIs","text":"<p>Fun\u00e7\u00f5es SAP standard para opera\u00e7\u00f5es de neg\u00f3cio.</p> <p>Exemplo: Buscar lista de voos</p> <pre><code>CALL FUNCTION 'BAPI_FLIGHT_GETLIST'\n  EXPORTING\n    airline = 'LH'\n  TABLES\n    flight_list = DATA(lt_flights).\n\nLOOP AT lt_flights INTO DATA(ls_flight).\n  WRITE: / ls_flight-flightdate, ls_flight-airportfr.\nENDLOOP.\n</code></pre> <p>Ver exemplo completo \u2192</p>"},{"location":"integracoes/#2-rfc-remote-function-call","title":"2\ufe0f\u20e3 RFC (Remote Function Call)","text":"<p>Chamar fun\u00e7\u00f5es em sistemas remotos.</p> <p>Exemplo:</p> <pre><code>CALL FUNCTION 'Z_REMOTE_FUNCTION' \n  DESTINATION 'SISTEMA_REMOTO'\n  EXPORTING\n    iv_param = lv_value\n  IMPORTING\n    ev_result = lv_result.\n</code></pre>"},{"location":"integracoes/#3-http-rest-apis","title":"3\ufe0f\u20e3 HTTP / REST APIs","text":"<p>Consumir servi\u00e7os web externos.</p> <p>Exemplo com CL_HTTP_CLIENT:</p> <pre><code>DATA: lo_client TYPE REF TO if_http_client,\n      lv_response TYPE string.\n\ncl_http_client=&gt;create_by_url(\n  EXPORTING url = 'https://api.exemplo.com/dados'\n  IMPORTING client = lo_client ).\n\nlo_client-&gt;request-&gt;set_method( 'GET' ).\nlo_client-&gt;send( ).\nlo_client-&gt;receive( ).\n\nlv_response = lo_client-&gt;response-&gt;get_cdata( ).\nWRITE: / lv_response.\n</code></pre>"},{"location":"integracoes/#4-json-xml","title":"4\ufe0f\u20e3 JSON / XML","text":"<p>Parse e criar estruturas de dados.</p> <p>JSON:</p> <pre><code>DATA: lv_json TYPE string,\n      lt_data TYPE TABLE OF sflight.\n\nSELECT * FROM sflight INTO TABLE lt_data UP TO 10 ROWS.\n\n\" Serializar para JSON\nlv_json = /ui2/cl_json=&gt;serialize( data = lt_data ).\nWRITE: / lv_json.\n\n\" Deserializar de JSON\n/ui2/cl_json=&gt;deserialize(\n  EXPORTING json = lv_json\n  CHANGING  data = lt_data ).\n</code></pre>"},{"location":"integracoes/#tutoriais-e-exemplos","title":"\ud83d\udcda Tutoriais e Exemplos","text":""},{"location":"integracoes/#bapis-comuns","title":"BAPIs Comuns","text":"<ul> <li><code>BAPI_FLIGHT_GETLIST</code> \u2014 Buscar voos</li> <li><code>BAPI_MATERIAL_GET_DETAIL</code> \u2014 Detalhes de material</li> <li><code>BAPI_SALESORDER_CREATEFROMDAT2</code> \u2014 Criar ordem de venda</li> <li><code>BAPI_CUSTOMER_GETLIST</code> \u2014 Listar clientes</li> <li><code>BAPI_TRANSACTION_COMMIT</code> \u2014 Commit de transa\u00e7\u00e3o</li> </ul> <p>Ver exemplo BAPI \u2192</p>"},{"location":"integracoes/#exercicios-praticos","title":"Exerc\u00edcios Pr\u00e1ticos","text":"<ul> <li><code>ex01.md</code> \u2192 BAPI b\u00e1sica</li> <li><code>ex02.md</code> \u2192 RFC para sistema remoto</li> <li><code>ex03.md</code> \u2192 Consumir API REST</li> <li><code>ex04.md</code> \u2192 Parse JSON</li> <li><code>ex05.md</code> \u2192 Criar Web Service</li> <li><code>ex06-ex10.md</code> \u2192 Integra\u00e7\u00f5es avan\u00e7adas</li> </ul>"},{"location":"integracoes/#ferramentas-uteis","title":"\ud83d\udd27 Ferramentas \u00dateis","text":""},{"location":"integracoes/#transacoes-sap","title":"Transa\u00e7\u00f5es SAP","text":"<ul> <li>SE37 \u2014 Testar function modules e BAPIs</li> <li>SM59 \u2014 Configurar destinos RFC</li> <li>SPROXY \u2014 Criar proxies para Web Services</li> <li>SICF \u2014 Configurar servi\u00e7os HTTP</li> <li>WE02 \u2014 Monitorizar IDocs</li> </ul>"},{"location":"integracoes/#classes-uteis","title":"Classes \u00dateis","text":"<ul> <li><code>CL_HTTP_CLIENT</code> \u2014 Cliente HTTP</li> <li><code>/UI2/CL_JSON</code> \u2014 JSON serializer</li> <li><code>CL_IXML</code> \u2014 Parser XML</li> <li><code>CL_PROXY_CLIENT</code> \u2014 Web Service client</li> </ul>"},{"location":"integracoes/#exemplo-completo-integracao-rest","title":"\ud83d\udca1 Exemplo Completo: Integra\u00e7\u00e3o REST","text":"<pre><code>REPORT z_rest_integration.\n\nDATA: lo_client TYPE REF TO if_http_client,\n      lv_url TYPE string VALUE 'https://jsonplaceholder.typicode.com/posts/1',\n      lv_json TYPE string.\n\nTRY.\n    \" Criar cliente HTTP\n    cl_http_client=&gt;create_by_url(\n      EXPORTING url = lv_url\n      IMPORTING client = lo_client ).\n\n    \" Configurar m\u00e9todo GET\n    lo_client-&gt;request-&gt;set_method( 'GET' ).\n\n    \" Enviar request\n    lo_client-&gt;send( ).\n\n    \" Receber response\n    lo_client-&gt;receive( ).\n\n    \" Obter dados JSON\n    lv_json = lo_client-&gt;response-&gt;get_cdata( ).\n\n    \" Parse JSON\n    DATA: BEGIN OF ls_post,\n            userid TYPE i,\n            id     TYPE i,\n            title  TYPE string,\n            body   TYPE string,\n          END OF ls_post.\n\n    /ui2/cl_json=&gt;deserialize(\n      EXPORTING json = lv_json\n      CHANGING  data = ls_post ).\n\n    \" Exibir\n    WRITE: / 'T\u00edtulo:', ls_post-title,\n         / 'Corpo:', ls_post-body.\n\n  CATCH cx_root INTO DATA(lx_error).\n    WRITE: / 'Erro:', lx_error-&gt;get_text( ).\nENDTRY.\n</code></pre>"},{"location":"integracoes/#boas-praticas","title":"\ud83d\udea8 Boas Pr\u00e1ticas","text":""},{"location":"integracoes/#fazer","title":"\u2705 Fazer","text":"<ul> <li>Sempre usar <code>TRY...CATCH</code> em integra\u00e7\u00f5es</li> <li>Validar dados antes de enviar</li> <li>Usar <code>BAPI_TRANSACTION_COMMIT</code> ap\u00f3s BAPIs de atualiza\u00e7\u00e3o</li> <li>Configurar timeouts adequados</li> <li>Logar erros de integra\u00e7\u00e3o</li> </ul>"},{"location":"integracoes/#evitar","title":"\u274c Evitar","text":"<ul> <li>Expor credenciais em c\u00f3digo</li> <li>N\u00e3o tratar erros de rede</li> <li>Ignorar mensagens de retorno de BAPIs</li> <li>Fazer integra\u00e7\u00f5es s\u00edncronas pesadas sem fallback</li> </ul>"},{"location":"integracoes/#seguranca","title":"\ud83d\udd10 Seguran\u00e7a","text":"<ul> <li>Use SM59 para configurar autentica\u00e7\u00e3o RFC</li> <li>Credenciais devem estar em tabelas seguras (n\u00e3o hardcoded)</li> <li>Use HTTPS sempre que poss\u00edvel</li> <li>Valide certificados SSL</li> <li>Implemente OAuth quando dispon\u00edvel</li> </ul>"},{"location":"integracoes/#proximos-passos","title":"\ud83d\ude80 Pr\u00f3ximos Passos","text":"<ol> <li>Leia BAPI Flight</li> <li>Experimente os exerc\u00edcios <code>ex01.md</code> a <code>ex10.md</code></li> <li>Configure uma integra\u00e7\u00e3o REST real</li> <li>Explore Jobs para processar integra\u00e7\u00f5es em background</li> </ol>"},{"location":"integracoes/bapi_flight/","title":"BAPI Flight GetList","text":"<pre><code>CALL FUNCTION 'BAPI_FLIGHT_GETLIST'\n  EXPORTING airline = 'LH'\n  TABLES flight_list = DATA(lt_flights).\n</code></pre>"},{"location":"jobs/","title":"\u23f0 Jobs em Background","text":"<p>Agendamento e execu\u00e7\u00e3o de programas ABAP em background: SUBMIT, background processing, monitoriza\u00e7\u00e3o e boas pr\u00e1ticas.</p>"},{"location":"jobs/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Executar programas em background</li> <li>Usar SUBMIT para chamar reports</li> <li>Agendar jobs peri\u00f3dicos (SM36)</li> <li>Monitorizar jobs (SM37)</li> <li>Variantes de sele\u00e7\u00e3o</li> <li>Jobs com depend\u00eancias</li> <li>Notifica\u00e7\u00f5es e logs</li> <li>Tratamento de erros em background</li> </ul>"},{"location":"jobs/#tipos-de-execucao","title":"\ud83c\udfaf Tipos de Execu\u00e7\u00e3o","text":""},{"location":"jobs/#1-execucao-direta-foreground","title":"1\ufe0f\u20e3 Execu\u00e7\u00e3o Direta (Foreground)","text":"<p>Executar programa na sess\u00e3o atual.</p> <pre><code>SUBMIT z_meu_report AND RETURN.\n</code></pre>"},{"location":"jobs/#2-execucao-em-background","title":"2\ufe0f\u20e3 Execu\u00e7\u00e3o em Background","text":"<p>Enviar para processar em segundo plano.</p> <pre><code>SUBMIT z_meu_report \n  VIA JOB 'MEU_JOB' \n  NUMBER lv_job_number\n  AND RETURN.\n</code></pre> <p>Ver exemplo completo \u2192</p>"},{"location":"jobs/#3-agendamento-periodico","title":"3\ufe0f\u20e3 Agendamento Peri\u00f3dico","text":"<p>Job autom\u00e1tico (di\u00e1rio, semanal, mensal).</p> <p>Transa\u00e7\u00e3o SM36: 1. Definir nome do job 2. Adicionar step (programa) 3. Configurar periodicidade 4. Salvar e liberar</p>"},{"location":"jobs/#ferramentas","title":"\ud83d\udee0\ufe0f Ferramentas","text":""},{"location":"jobs/#transacoes-sap","title":"Transa\u00e7\u00f5es SAP","text":"Transa\u00e7\u00e3o Descri\u00e7\u00e3o SM36 Criar e agendar jobs SM37 Monitorizar jobs existentes SE38 Criar variantes de sele\u00e7\u00e3o SM35 Batch Input sessions SM13 Update records"},{"location":"jobs/#exemplos-praticos","title":"\ud83d\udca1 Exemplos Pr\u00e1ticos","text":""},{"location":"jobs/#submit-basico","title":"SUBMIT B\u00e1sico","text":"<p>Como executar um report de outro programa.</p> <pre><code>SUBMIT z_report\n  WITH p_carr = 'LH'\n  WITH s_date IN lt_date_range\n  VIA JOB 'PROCESSO_VOOS'\n  AND RETURN.\n</code></pre>"},{"location":"jobs/#criar-job-programaticamente","title":"Criar Job Programaticamente","text":"<pre><code>DATA: lv_job_name   TYPE btcjob VALUE 'Z_JOB_AUTOMATICO',\n      lv_job_number TYPE btcjobcnt.\n\n\" Abrir job\nCALL FUNCTION 'JOB_OPEN'\n  EXPORTING\n    jobname  = lv_job_name\n  IMPORTING\n    jobcount = lv_job_number.\n\n\" Adicionar step (programa)\nSUBMIT z_meu_report\n  WITH p_param = lv_value\n  VIA JOB lv_job_name NUMBER lv_job_number\n  AND RETURN.\n\n\" Fechar e agendar job\nCALL FUNCTION 'JOB_CLOSE'\n  EXPORTING\n    jobname  = lv_job_name\n    jobcount = lv_job_number\n    strtimmed = 'X'  \" Iniciar imediatamente\n  EXCEPTIONS\n    OTHERS = 1.\n\nIF sy-subrc = 0.\n  WRITE: / |Job { lv_job_number } criado com sucesso|.\nENDIF.\n</code></pre>"},{"location":"jobs/#job-com-periodicidade","title":"Job com Periodicidade","text":"<pre><code>\" Executar todos os dias \u00e0s 2h da manh\u00e3\nDATA: ls_start_date TYPE btch0000.\n\nls_start_date-sdlstrtdt = sy-datum.\nls_start_date-sdlstrttm = '020000'.  \" 02:00:00\n\nCALL FUNCTION 'JOB_CLOSE'\n  EXPORTING\n    jobname          = lv_job_name\n    jobcount         = lv_job_number\n    sdlstrtdt        = ls_start_date-sdlstrtdt\n    sdlstrttm        = ls_start_date-sdlstrttm\n    periodic_values  = 'X'  \" Job peri\u00f3dico\n    period_value     = '1'  \" Valor\n    period_unit      = 'D'  \" Unidade (D=di\u00e1rio, W=semanal, M=mensal)\n  EXCEPTIONS\n    OTHERS = 1.\n</code></pre>"},{"location":"jobs/#exercicios-praticos","title":"\ud83d\udcda Exerc\u00edcios Pr\u00e1ticos","text":""},{"location":"jobs/#exercicios-disponiveis","title":"Exerc\u00edcios Dispon\u00edveis","text":"<ul> <li><code>ex01.md</code> \u2192 SUBMIT b\u00e1sico</li> <li><code>ex02.md</code> \u2192 Criar job programaticamente</li> <li><code>ex03.md</code> \u2192 Job peri\u00f3dico com variantes</li> </ul>"},{"location":"jobs/#monitorizacao-de-jobs","title":"\ud83d\udcca Monitoriza\u00e7\u00e3o de Jobs","text":""},{"location":"jobs/#verificar-status-do-job","title":"Verificar Status do Job","text":"<pre><code>DATA: lt_jobs TYPE TABLE OF tbtcjob.\n\nCALL FUNCTION 'BP_JOBLIST_READ'\n  EXPORTING\n    job_select_param = VALUE btcselect( jobname = 'Z_MEU_JOB*' )\n  TABLES\n    job_list         = lt_jobs.\n\nLOOP AT lt_jobs INTO DATA(ls_job).\n  WRITE: / ls_job-jobname, ls_job-status.\nENDLOOP.\n</code></pre>"},{"location":"jobs/#status-possiveis","title":"Status poss\u00edveis:","text":"<ul> <li>R \u2014 Running (em execu\u00e7\u00e3o)</li> <li>F \u2014 Finished (conclu\u00eddo)</li> <li>A \u2014 Aborted (abortado)</li> <li>S \u2014 Scheduled (agendado)</li> <li>Y \u2014 Ready (pronto para executar)</li> </ul>"},{"location":"jobs/#boas-praticas","title":"\ud83d\udea8 Boas Pr\u00e1ticas","text":""},{"location":"jobs/#fazer","title":"\u2705 Fazer","text":"<ol> <li>Usar variantes para par\u00e2metros complexos</li> <li>Agendar fora do hor\u00e1rio de pico (noite/fim de semana)</li> <li>Configurar notifica\u00e7\u00f5es em caso de erro</li> <li>Logar execu\u00e7\u00e3o do job (SLG1 ou tabela custom)</li> <li>Testar em foreground antes de agendar</li> <li>Documentar periodicidade e depend\u00eancias</li> </ol>"},{"location":"jobs/#evitar","title":"\u274c Evitar","text":"<ol> <li>Jobs de longa dura\u00e7\u00e3o sem commit work</li> <li>M\u00faltiplos jobs a processar os mesmos dados simultaneamente</li> <li>Jobs sem tratamento de erros</li> <li>N\u00e3o monitorizar jobs cr\u00edticos (SM37)</li> <li>Esquecer variantes ao transportar jobs</li> </ol>"},{"location":"jobs/#notificacoes","title":"\ud83d\udd14 Notifica\u00e7\u00f5es","text":""},{"location":"jobs/#enviar-email-em-caso-de-erro","title":"Enviar Email em Caso de Erro","text":"<pre><code>IF lv_error = abap_true.\n  \" Enviar email\n  CALL FUNCTION 'SO_NEW_DOCUMENT_ATT_SEND_API1'\n    EXPORTING\n      document_data = VALUE sodocchgi1( \n        obj_descr = 'Job falhou: Z_MEU_JOB' )\n    \" ... outros par\u00e2metros\n    TABLES\n      receivers = VALUE somlreci1_tab( \n        ( receiver = 'user@empresa.com' rec_type = 'U' ) ).\nENDIF.\n</code></pre>"},{"location":"jobs/#variantes-de-selecao","title":"\ud83d\udcbe Variantes de Sele\u00e7\u00e3o","text":""},{"location":"jobs/#criar-variante-se38","title":"Criar Variante (SE38)","text":"<ol> <li>Executar programa</li> <li>Preencher par\u00e2metros</li> <li>Menu: Ir para \u2192 Variantes \u2192 Salvar como variante</li> <li>Dar nome \u00e0 variante</li> </ol>"},{"location":"jobs/#usar-variante-em-submit","title":"Usar Variante em SUBMIT","text":"<pre><code>SUBMIT z_meu_report\n  USING SELECTION-SET 'VARIANTE_PRODUCAO'\n  VIA JOB 'PROCESSO_NOTURNO'\n  AND RETURN.\n</code></pre>"},{"location":"jobs/#proximos-passos","title":"\ud83d\ude80 Pr\u00f3ximos Passos","text":"<ol> <li>Leia SUBMIT</li> <li>Experimente criar um job simples (SM36)</li> <li>Pratique com <code>ex01.md</code> a <code>ex03.md</code></li> <li>Configure monitoriza\u00e7\u00e3o para jobs cr\u00edticos</li> <li>Explore Integra\u00e7\u00f5es para processar dados externos em background</li> </ol>"},{"location":"jobs/submit/","title":"SUBMIT","text":"<pre><code>SUBMIT z_report VIA JOB 'DEMO_JOB' AND RETURN.\n</code></pre>"},{"location":"objetos/","title":"\ud83e\uddf1 Programa\u00e7\u00e3o Orientada a Objetos (OO)","text":"<p>Introdu\u00e7\u00e3o \u00e0 programa\u00e7\u00e3o orientada a objetos em ABAP: classes, m\u00e9todos, interfaces, heran\u00e7a e padr\u00f5es de design.</p>"},{"location":"objetos/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Criar classes e objetos</li> <li>Definir e implementar m\u00e9todos</li> <li>Atributos p\u00fablicos, protegidos e privados</li> <li>Construtores (CONSTRUCTOR)</li> <li>Interfaces e polimorfismo</li> <li>Heran\u00e7a e redefini\u00e7\u00e3o de m\u00e9todos</li> <li>Padr\u00f5es de design (Singleton, Factory, etc.)</li> <li>Eventos e tratadores</li> </ul>"},{"location":"objetos/#ordem-de-aprendizagem","title":"\ud83c\udfaf Ordem de Aprendizagem","text":""},{"location":"objetos/#1-classes-basicas","title":"1\ufe0f\u20e3 Classes B\u00e1sicas","text":"<p>Como definir e usar classes locais e globais.</p> <p>Exemplo simples:</p> <pre><code>CLASS lcl_calculadora DEFINITION.\n  PUBLIC SECTION.\n    METHODS: somar IMPORTING iv_a TYPE i iv_b TYPE i \n                   RETURNING VALUE(rv_result) TYPE i.\nENDCLASS.\n\nCLASS lcl_calculadora IMPLEMENTATION.\n  METHOD somar.\n    rv_result = iv_a + iv_b.\n  ENDMETHOD.\nENDCLASS.\n\nSTART-OF-SELECTION.\n  DATA(lo_calc) = NEW lcl_calculadora( ).\n  DATA(lv_soma) = lo_calc-&gt;somar( iv_a = 10 iv_b = 20 ).\n  WRITE: / |Resultado: { lv_soma }|.\n</code></pre>"},{"location":"objetos/#2-atributos-e-encapsulamento","title":"2\ufe0f\u20e3 Atributos e Encapsulamento","text":"<p>Controlar acesso aos dados da classe.</p>"},{"location":"objetos/#3-construtores","title":"3\ufe0f\u20e3 Construtores","text":"<p>Inicializar objetos com <code>CONSTRUCTOR</code>.</p>"},{"location":"objetos/#4-interfaces","title":"4\ufe0f\u20e3 Interfaces","text":"<p>Definir contratos que classes devem implementar.</p>"},{"location":"objetos/#5-heranca","title":"5\ufe0f\u20e3 Heran\u00e7a","text":"<p>Reutilizar c\u00f3digo atrav\u00e9s de <code>INHERITING FROM</code>.</p>"},{"location":"objetos/#6-metodos-estaticos","title":"6\ufe0f\u20e3 M\u00e9todos Est\u00e1ticos","text":"<p>Usar <code>CLASS-METHODS</code> sem instanciar objetos.</p>"},{"location":"objetos/#7-eventos","title":"7\ufe0f\u20e3 Eventos","text":"<p>Comunica\u00e7\u00e3o entre objetos via eventos.</p>"},{"location":"objetos/#8-padroes-de-design","title":"8\ufe0f\u20e3 Padr\u00f5es de Design","text":"<p>Singleton, Factory, Observer, etc.</p>"},{"location":"objetos/#exercicios-praticos","title":"\ud83d\udcda Exerc\u00edcios Pr\u00e1ticos","text":"<p>Temos 10 exerc\u00edcios em <code>ex01.md</code> a <code>ex10.md</code> que cobrem:</p> <ul> <li>Cria\u00e7\u00e3o de classes b\u00e1sicas</li> <li>Implementa\u00e7\u00e3o de interfaces</li> <li>Uso de heran\u00e7a</li> <li>Padr\u00f5es Singleton e Factory</li> <li>Eventos entre classes</li> <li>Exce\u00e7\u00f5es customizadas</li> </ul>"},{"location":"objetos/#conceitos-importantes","title":"\ud83e\udde0 Conceitos Importantes","text":""},{"location":"objetos/#visibilidade-de-atributos","title":"Visibilidade de Atributos","text":"Se\u00e7\u00e3o Acesso <code>PUBLIC SECTION</code> Acess\u00edvel de qualquer lugar <code>PROTECTED SECTION</code> Acess\u00edvel na classe e subclasses <code>PRIVATE SECTION</code> Apenas dentro da classe"},{"location":"objetos/#criar-classes-globais-vs-locais","title":"Criar Classes Globais vs. Locais","text":"<ul> <li>Globais: SE24 / SE80 \u2192 reutiliz\u00e1veis em todo o sistema</li> <li>Locais: dentro do programa \u2192 escopo limitado</li> </ul>"},{"location":"objetos/#exemplo-com-interface","title":"\ud83d\udca1 Exemplo com Interface","text":"<pre><code>INTERFACE lif_forma.\n  METHODS calcular_area RETURNING VALUE(rv_area) TYPE f.\nENDINTERFACE.\n\nCLASS lcl_circulo DEFINITION.\n  PUBLIC SECTION.\n    INTERFACES lif_forma.\n    METHODS constructor IMPORTING iv_raio TYPE f.\n  PRIVATE SECTION.\n    DATA mv_raio TYPE f.\nENDCLASS.\n\nCLASS lcl_circulo IMPLEMENTATION.\n  METHOD constructor.\n    mv_raio = iv_raio.\n  ENDMETHOD.\n\n  METHOD lif_forma~calcular_area.\n    CONSTANTS lc_pi TYPE f VALUE '3.14159'.\n    rv_area = lc_pi * mv_raio * mv_raio.\n  ENDMETHOD.\nENDCLASS.\n\nSTART-OF-SELECTION.\n  DATA(lo_circulo) = NEW lcl_circulo( iv_raio = 5 ).\n  DATA(lv_area) = lo_circulo-&gt;lif_forma~calcular_area( ).\n  WRITE: / |\u00c1rea do c\u00edrculo: { lv_area }|.\n</code></pre>"},{"location":"objetos/#proximos-passos","title":"\ud83d\ude80 Pr\u00f3ximos Passos","text":"<ol> <li>Comece por Classes B\u00e1sicas</li> <li>Pratique com os exerc\u00edcios <code>ex01.md</code> a <code>ex10.md</code></li> <li>Explore padr\u00f5es de design em projetos reais</li> <li>Avance para ALV OO para aplicar OO em interfaces</li> </ol>"},{"location":"objetos/classes_basico/","title":"Classe simples","text":"<pre><code>CLASS lcl_demo DEFINITION.\n  PUBLIC SECTION.\n    METHODS show.\nENDCLASS.\n\nCLASS lcl_demo IMPLEMENTATION.\n  METHOD show.\n    WRITE: / 'Ol\u00e1 OO ABAP'.\n  ENDMETHOD.\nENDCLASS.\n\nSTART-OF-SELECTION.\n  DATA(lo_obj) = NEW lcl_demo( ).\n  lo_obj-&gt;show( ).\n</code></pre>"},{"location":"performance/","title":"\u26a1 Performance e Boas Pr\u00e1ticas","text":"<p>Dicas e padr\u00f5es para escrever c\u00f3digo ABAP eficiente: otimiza\u00e7\u00e3o de consultas SQL, uso correto de tabelas internas e <code>FOR ALL ENTRIES</code>.</p>"},{"location":"performance/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Identificar gargalos de performance</li> <li>Otimizar SELECTs e consultas SQL</li> <li>Usar <code>FOR ALL ENTRIES</code> corretamente</li> <li>Trabalhar eficientemente com tabelas internas</li> <li>Evitar armadilhas comuns (SELECT em LOOP, etc.)</li> <li>Usar \u00edndices de base de dados</li> <li>An\u00e1lise com SAT (Runtime Analysis)</li> <li>Buffering de tabelas</li> </ul>"},{"location":"performance/#regras-de-ouro","title":"\ud83c\udfaf Regras de Ouro","text":""},{"location":"performance/#fazer","title":"\u2705 Fazer","text":"<ol> <li>Minimizar acessos \u00e0 BD: agregar dados numa \u00fanica query</li> <li>Usar campos de \u00edndice: WHERE com campos indexados</li> <li>Limitar resultados: <code>UP TO n ROWS</code> quando poss\u00edvel</li> <li>Projetar apenas campos necess\u00e1rios: evitar <code>SELECT *</code></li> <li>Usar <code>FOR ALL ENTRIES</code> para substituir SELECTs em LOOP</li> </ol>"},{"location":"performance/#evitar","title":"\u274c Evitar","text":"<ol> <li>SELECT dentro de LOOP: causa m\u00faltiplos acessos \u00e0 BD</li> <li>FOR ALL ENTRIES sem valida\u00e7\u00e3o: pode falhar com tabela vazia</li> <li>APPEND em LOOPs grandes: usar <code>INSERT LINES OF</code> ou <code>VALUE #( )</code></li> <li>NESTED LOOPs profundos: considerar usar tabelas HASHED</li> <li>Modificar tabelas durante itera\u00e7\u00e3o: pode causar comportamento inesperado</li> </ol>"},{"location":"performance/#conceitos-principais","title":"\ud83d\udd11 Conceitos Principais","text":""},{"location":"performance/#for-all-entries","title":"FOR ALL ENTRIES","text":"<p>Como usar e armadilhas a evitar.</p> <p>Exemplo correto:</p> <pre><code>SELECT * FROM scarr INTO TABLE @DATA(lt_carriers) UP TO 100 ROWS.\n\n\" \u2705 Validar antes de usar FOR ALL ENTRIES\nIF lt_carriers IS NOT INITIAL.\n  SELECT * FROM spfli\n    INTO TABLE @DATA(lt_connections)\n    FOR ALL ENTRIES IN @lt_carriers\n    WHERE carrid = @lt_carriers-carrid.\nENDIF.\n</code></pre> <p>\u274c Errado (sem valida\u00e7\u00e3o):</p> <pre><code>\" Se lt_carriers estiver vazia, retorna TODOS os registos!\nSELECT * FROM spfli\n  INTO TABLE @DATA(lt_connections)\n  FOR ALL ENTRIES IN @lt_carriers\n  WHERE carrid = @lt_carriers-carrid.\n</code></pre>"},{"location":"performance/#comparacao-de-abordagens","title":"\ud83d\udcca Compara\u00e7\u00e3o de Abordagens","text":""},{"location":"performance/#cenario-buscar-detalhes-de-1000-encomendas","title":"Cen\u00e1rio: Buscar detalhes de 1000 encomendas","text":""},{"location":"performance/#ma-pratica-select-em-loop","title":"\u274c M\u00e1 pr\u00e1tica (SELECT em LOOP)","text":"<pre><code>LOOP AT lt_encomendas INTO DATA(ls_enc).\n  SELECT SINGLE * FROM vbap \n    INTO @DATA(ls_item)\n    WHERE vbeln = @ls_enc-vbeln.\n  \" 1000 queries \u00e0 BD! \ud83d\ude31\nENDLOOP.\n</code></pre>"},{"location":"performance/#boa-pratica-for-all-entries","title":"\u2705 Boa pr\u00e1tica (FOR ALL ENTRIES)","text":"<pre><code>IF lt_encomendas IS NOT INITIAL.\n  SELECT * FROM vbap\n    INTO TABLE @DATA(lt_items)\n    FOR ALL ENTRIES IN @lt_encomendas\n    WHERE vbeln = @lt_encomendas-vbeln.\n  \" 1 query \u00e0 BD! \u2705\nENDIF.\n</code></pre>"},{"location":"performance/#analise-de-performance","title":"\ud83e\uddea An\u00e1lise de Performance","text":""},{"location":"performance/#runtime-analysis-sat","title":"Runtime Analysis (SAT)","text":"<ol> <li>Executar transa\u00e7\u00e3o SAT</li> <li>Ativar medi\u00e7\u00e3o</li> <li>Executar o programa</li> <li>Analisar resultados:</li> <li>Tempo total</li> <li>Tempo por m\u00e9todo/fun\u00e7\u00e3o</li> <li>Hits de base de dados</li> <li>Tempo de processamento ABAP vs. BD</li> </ol>"},{"location":"performance/#sql-trace-st05","title":"SQL Trace (ST05)","text":"<ul> <li>Monitorizar todas as opera\u00e7\u00f5es SQL</li> <li>Identificar SELECTs lentos</li> <li>Ver planos de execu\u00e7\u00e3o</li> </ul>"},{"location":"performance/#exercicios-praticos","title":"\ud83d\udcda Exerc\u00edcios Pr\u00e1ticos","text":"<p>Temos 10 exerc\u00edcios progressivos em <code>ex01.md</code> a <code>ex10.md</code>:</p> <ul> <li>ex01: Otimizar SELECT dentro de LOOP</li> <li>ex02: Usar FOR ALL ENTRIES corretamente</li> <li>ex03: Trabalhar com tabelas HASHED</li> <li>ex04: Evitar NESTED LOOPs</li> <li>ex05: Buffering de tabelas</li> <li>ex06-ex10: Casos pr\u00e1ticos de otimiza\u00e7\u00e3o</li> </ul>"},{"location":"performance/#exemplo-completo-antes-e-depois","title":"\ud83d\udca1 Exemplo Completo: Antes e Depois","text":""},{"location":"performance/#antes-lento","title":"\ud83d\udc0c Antes (Lento)","text":"<pre><code>REPORT z_performance_bad.\n\nDATA: lt_orders TYPE TABLE OF vbak,\n      lt_items  TYPE TABLE OF vbap.\n\nSELECT * FROM vbak INTO TABLE lt_orders UP TO 1000 ROWS.\n\nLOOP AT lt_orders INTO DATA(ls_order).\n  \" \u274c SELECT dentro de LOOP - 1000 queries!\n  SELECT * FROM vbap\n    INTO TABLE @DATA(lt_temp)\n    WHERE vbeln = @ls_order-vbeln.\n  APPEND LINES OF lt_temp TO lt_items.\nENDLOOP.\n</code></pre> <p>Performance: ~5-10 segundos para 1000 encomendas</p>"},{"location":"performance/#depois-rapido","title":"\ud83d\ude80 Depois (R\u00e1pido)","text":"<pre><code>REPORT z_performance_good.\n\nDATA: lt_orders TYPE TABLE OF vbak,\n      lt_items  TYPE TABLE OF vbap.\n\nSELECT * FROM vbak INTO TABLE lt_orders UP TO 1000 ROWS.\n\n\" \u2705 Uma \u00fanica query com FOR ALL ENTRIES\nIF lt_orders IS NOT INITIAL.\n  SELECT * FROM vbap\n    INTO TABLE lt_items\n    FOR ALL ENTRIES IN @lt_orders\n    WHERE vbeln = @lt_orders-vbeln.\nENDIF.\n</code></pre> <p>Performance: ~0.5 segundos para 1000 encomendas Melhoria: 10-20x mais r\u00e1pido! \ud83c\udfaf</p>"},{"location":"performance/#tabelas-internas-standard-vs-sorted-vs-hashed","title":"\ud83d\udd0d Tabelas Internas: Standard vs. Sorted vs. Hashed","text":"Tipo Acesso Uso ideal <code>STANDARD TABLE</code> Sequencial (lento) Pequenas tabelas, sem buscas <code>SORTED TABLE</code> Bin\u00e1rio (m\u00e9dio) Acesso ordenado, buscas m\u00e9dias <code>HASHED TABLE</code> Hash (r\u00e1pido) Buscas frequentes com chave <p>Exemplo com HASHED:</p> <pre><code>DATA lt_materials TYPE HASHED TABLE OF mara \n  WITH UNIQUE KEY matnr.\n\nREAD TABLE lt_materials WITH KEY matnr = 'MAT001' \n  INTO DATA(ls_mat).\n\" O(1) - acesso instant\u00e2neo! \n</code></pre>"},{"location":"performance/#proximos-passos","title":"\ud83d\ude80 Pr\u00f3ximos Passos","text":"<ol> <li>Comece por FOR ALL ENTRIES</li> <li>Pratique com <code>ex01.md</code> a <code>ex10.md</code></li> <li>Use SAT para analisar seus programas</li> <li>Aplique as boas pr\u00e1ticas em c\u00f3digo real</li> <li>Avance para SQL para otimiza\u00e7\u00f5es de queries</li> </ol>"},{"location":"performance/for_all_entries/","title":"FOR ALL ENTRIES","text":"<pre><code>SELECT carrid, connid FROM sflight INTO TABLE @DATA(lt_s).\nSELECT * FROM spfli INTO TABLE @DATA(lt_p)\n  FOR ALL ENTRIES IN @lt_s\n  WHERE carrid = @lt_s-carrid.\n</code></pre>"},{"location":"security/","title":"\ud83d\udd12 Seguran\u00e7a e Autoriza\u00e7\u00e3o","text":"<p>Pr\u00e1ticas e exemplos para verificar autoriza\u00e7\u00f5es e proteger programas ABAP contra acessos n\u00e3o autorizados.</p>"},{"location":"security/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Objetos de autoriza\u00e7\u00e3o</li> <li>AUTHORITY-CHECK</li> <li>Roles e perfis de utilizador (PFCG)</li> <li>SU53 para an\u00e1lise de erros</li> <li>Prote\u00e7\u00e3o de transa\u00e7\u00f5es customizadas</li> <li>Boas pr\u00e1ticas de seguran\u00e7a</li> <li>Auditoria e logs</li> </ul>"},{"location":"security/#conceitos-principais","title":"\ud83c\udfaf Conceitos Principais","text":""},{"location":"security/#objeto-de-autorizacao","title":"Objeto de Autoriza\u00e7\u00e3o","text":"<p>Define o qu\u00ea pode ser protegido (ex: S_TCODE para transa\u00e7\u00f5es)</p>"},{"location":"security/#campo-de-autorizacao","title":"Campo de Autoriza\u00e7\u00e3o","text":"<p>Define como \u00e9 protegido (ex: TCD = c\u00f3digo da transa\u00e7\u00e3o)</p>"},{"location":"security/#perfil-de-autorizacao","title":"Perfil de Autoriza\u00e7\u00e3o","text":"<p>Conjunto de autoriza\u00e7\u00f5es atribu\u00eddas a um utilizador</p>"},{"location":"security/#authority-check","title":"\ud83d\udd11 AUTHORITY-CHECK","text":""},{"location":"security/#verificacao-basica","title":"Verifica\u00e7\u00e3o B\u00e1sica","text":"<pre><code>AUTHORITY-CHECK OBJECT 'S_TCODE'\n  ID 'TCD' FIELD 'SE38'.\n\nIF sy-subrc &lt;&gt; 0.\n  MESSAGE 'Sem permiss\u00e3o para executar SE38' TYPE 'E'.\nENDIF.\n</code></pre>"},{"location":"security/#verificacao-com-multiplos-campos","title":"Verifica\u00e7\u00e3o com M\u00faltiplos Campos","text":"<pre><code>AUTHORITY-CHECK OBJECT 'M_MATE_WRK'\n  ID 'ACTVT' FIELD '02'      \" 02 = Altera\u00e7\u00e3o\n  ID 'WERKS' FIELD lv_planta.\n\nCASE sy-subrc.\n  WHEN 0.\n    \" Tem autoriza\u00e7\u00e3o\n  WHEN 4.\n    MESSAGE 'Sem autoriza\u00e7\u00e3o para alterar material nesta planta' TYPE 'E'.\n  WHEN 12.\n    MESSAGE 'Objeto de autoriza\u00e7\u00e3o n\u00e3o configurado' TYPE 'E'.\n  WHEN OTHERS.\n    MESSAGE 'Erro ao verificar autoriza\u00e7\u00e3o' TYPE 'E'.\nENDCASE.\n</code></pre>"},{"location":"security/#objetos-de-autorizacao-comuns","title":"\ud83d\udcca Objetos de Autoriza\u00e7\u00e3o Comuns","text":"Objeto Descri\u00e7\u00e3o <code>S_TCODE</code> Acesso a transa\u00e7\u00f5es <code>S_TABU_NAM</code> Acesso a tabelas <code>S_PROGRAM</code> Execu\u00e7\u00e3o de programs <code>S_DEVELOP</code> Objetos de desenvolvimento <code>M_MATE_WRK</code> Materiais por planta <code>F_BKPF_BUK</code> Documentos contabil\u00edsticos <code>V_VBAK_VKO</code> Ordens de venda <p>Consultar todos: Transa\u00e7\u00e3o SU21</p>"},{"location":"security/#exemplo-completo","title":"\ud83d\udca1 Exemplo Completo","text":"<pre><code>REPORT z_protegido.\n\n\" Par\u00e2metro de sele\u00e7\u00e3o\nPARAMETERS: p_bukrs TYPE bukrs.\n\nSTART-OF-SELECTION.\n\n  \" \u2705 Verificar autoriza\u00e7\u00e3o para a empresa\n  AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'\n    ID 'BUKRS' FIELD p_bukrs\n    ID 'ACTVT' FIELD '03'.  \" 03 = Visualiza\u00e7\u00e3o\n\n  IF sy-subrc &lt;&gt; 0.\n    MESSAGE |Sem autoriza\u00e7\u00e3o para empresa { p_bukrs }| TYPE 'E'.\n  ENDIF.\n\n  \" Continuar processamento...\n  SELECT * FROM bkpf\n    INTO TABLE @DATA(lt_docs)\n    WHERE bukrs = @p_bukrs\n    UP TO 100 ROWS.\n\n  WRITE: / |Encontrados { lines( lt_docs ) } documentos|.\n</code></pre>"},{"location":"security/#ferramentas-de-analise","title":"\ud83d\udee0\ufe0f Ferramentas de An\u00e1lise","text":""},{"location":"security/#su53-analise-de-autorizacao","title":"SU53 - An\u00e1lise de Autoriza\u00e7\u00e3o","text":"<p>Ap\u00f3s um erro de autoriza\u00e7\u00e3o, executar SU53 para ver: - Objeto que faltou - Campos e valores verificados - Utilizador e timestamp</p>"},{"location":"security/#pfcg-gestao-de-roles","title":"PFCG - Gest\u00e3o de Roles","text":"<p>Criar e manter roles (perfis de autoriza\u00e7\u00e3o): 1. Transa\u00e7\u00e3o PFCG 2. Criar role (ex: Z_VENDAS_READONLY) 3. Adicionar transa\u00e7\u00f5es e objetos 4. Gerar perfil 5. Atribuir a utilizadores</p>"},{"location":"security/#st01-system-trace","title":"ST01 - System Trace","text":"<p>Rastrear todas as verifica\u00e7\u00f5es de autoriza\u00e7\u00e3o: 1. Ativar trace em ST01 2. Executar programa 3. Desativar trace 4. Analisar verifica\u00e7\u00f5es realizadas</p>"},{"location":"security/#boas-praticas","title":"\ud83d\udea8 Boas Pr\u00e1ticas","text":""},{"location":"security/#fazer","title":"\u2705 Fazer","text":"<ol> <li>Sempre verificar antes de opera\u00e7\u00f5es cr\u00edticas</li> <li>Mensagens claras sobre o que falta</li> <li>Logar tentativas de acesso n\u00e3o autorizado</li> <li>Princ\u00edpio do menor privil\u00e9gio: dar apenas o necess\u00e1rio</li> <li>Usar objetos custom para funcionalidades pr\u00f3prias (Z*)</li> <li>Documentar requirements de autoriza\u00e7\u00e3o</li> </ol>"},{"location":"security/#evitar","title":"\u274c Evitar","text":"<ol> <li>Hardcoded bypass (ex: <code>IF sy-uname = 'ADMIN'</code>)</li> <li>Autoriza\u00e7\u00e3o gen\u00e9rica demais (ex: S_TCODE = *)</li> <li>Confiar apenas em UI (sempre validar no backend)</li> <li>N\u00e3o tratar sy-subrc ap\u00f3s AUTHORITY-CHECK</li> <li>Expor dados sens\u00edveis em logs</li> </ol>"},{"location":"security/#exemplo-avancado-role-customizado","title":"\ud83c\udf93 Exemplo Avan\u00e7ado: Role Customizado","text":""},{"location":"security/#1-criar-objeto-de-autorizacao-su21","title":"1. Criar Objeto de Autoriza\u00e7\u00e3o (SU21)","text":"<pre><code>Objeto: Z_VENDAS\nClasse: BC_A (Application-specific)\n\nCampos:\n- ACTVT (Atividade): 01=Criar, 02=Alterar, 03=Visualizar\n- VKORG (Organiza\u00e7\u00e3o de vendas)\n- SPART (Setor de atividade)\n</code></pre>"},{"location":"security/#2-usar-no-codigo","title":"2. Usar no C\u00f3digo","text":"<pre><code>AUTHORITY-CHECK OBJECT 'Z_VENDAS'\n  ID 'ACTVT' FIELD '02'           \" Alterar\n  ID 'VKORG' FIELD ls_ordem-vkorg\n  ID 'SPART' FIELD ls_ordem-spart.\n\nIF sy-subrc &lt;&gt; 0.\n  MESSAGE 'Sem autoriza\u00e7\u00e3o para alterar ordem desta org. vendas' TYPE 'E'.\nENDIF.\n</code></pre>"},{"location":"security/#3-criar-role-pfcg","title":"3. Criar Role (PFCG)","text":"<ol> <li>PFCG \u2192 Criar role Z_VENDEDOR</li> <li>Aba Autoriza\u00e7\u00f5es</li> <li>Adicionar objeto Z_VENDAS</li> <li>Configurar valores:</li> <li>ACTVT: 01, 03 (Criar e Visualizar)</li> <li>VKORG: 1000</li> <li>SPART: *</li> <li>Gerar perfil e atribuir a utilizadores</li> </ol>"},{"location":"security/#auditoria-e-logs","title":"\ud83d\udd10 Auditoria e Logs","text":""},{"location":"security/#logar-tentativas-falhadas","title":"Logar Tentativas Falhadas","text":"<pre><code>IF sy-subrc &lt;&gt; 0.\n  \" Logar em Application Log (SLG1)\n  CALL FUNCTION 'BAL_LOG_CREATE'\n    EXPORTING\n      i_s_log = VALUE bal_s_log(\n        object    = 'ZSECURITY'\n        subobject = 'AUTH_CHECK'\n        aldate    = sy-datum\n        altime    = sy-uzeit\n        aluser    = sy-uname )\n    IMPORTING\n      e_log_handle = DATA(lv_handle).\n\n  CALL FUNCTION 'BAL_LOG_MSG_ADD'\n    EXPORTING\n      i_log_handle = lv_handle\n      i_s_msg      = VALUE bal_s_msg(\n        msgty = 'E'\n        msgid = 'ZZ'\n        msgno = '001'\n        msgv1 = |Tentativa falha: { sy-tcode }| ).\n\n  COMMIT WORK.\nENDIF.\n</code></pre>"},{"location":"security/#exercicios-praticos","title":"\ud83d\udcda Exerc\u00edcios Pr\u00e1ticos","text":"<p>Exerc\u00edcios dispon\u00edveis (ser\u00e3o desenvolvidos): - <code>ex01.md</code> \u2192 AUTHORITY-CHECK b\u00e1sico - <code>ex02.md</code> \u2192 Criar objeto customizado - <code>ex03.md</code> \u2192 Role com m\u00faltiplas autoriza\u00e7\u00f5es - <code>ex04.md</code> \u2192 Auditoria de acessos - <code>ex05.md</code> \u2192 An\u00e1lise com SU53/ST01</p>"},{"location":"security/#proximos-passos","title":"\ud83d\udd17 Pr\u00f3ximos Passos","text":"<ol> <li>Leia Authority Check</li> <li>Execute SU53 ap\u00f3s um erro de autoriza\u00e7\u00e3o</li> <li>Crie um objeto Z* custom em SU21</li> <li>Configure um role em PFCG</li> <li>Implemente logging de tentativas falhadas</li> <li>Explore Performance para otimizar verifica\u00e7\u00f5es</li> </ol>"},{"location":"security/authority_check/","title":"Verifica\u00e7\u00e3o de Autoriza\u00e7\u00e3o","text":"<pre><code>AUTHORITY-CHECK OBJECT 'S_TCODE' ID 'TCD' FIELD 'SE38'.\nIF sy-subrc &lt;&gt; 0.\n  WRITE: / 'Sem permiss\u00e3o.'.\nENDIF.\n</code></pre>"},{"location":"sql/","title":"\ud83d\udcbe SQL ABAP","text":"<p>Consultas b\u00e1sicas, JOINS, agrega\u00e7\u00f5es e manipula\u00e7\u00e3o de dados na base de dados SAP.</p>"},{"location":"sql/#o-que-vais-aprender","title":"\ud83d\udcd6 O que vais aprender","text":"<ul> <li>Executar SELECTs b\u00e1sicos e avan\u00e7ados</li> <li>Usar JOINS para combinar tabelas</li> <li>Fun\u00e7\u00f5es de agrega\u00e7\u00e3o (COUNT, SUM, AVG, MAX, MIN)</li> <li>GROUP BY e HAVING</li> <li>Otimiza\u00e7\u00f5es e boas pr\u00e1ticas SQL</li> <li>Cl\u00e1usulas WHERE din\u00e2micas</li> <li>INSERT, UPDATE, DELETE e MODIFY</li> </ul>"},{"location":"sql/#ordem-de-aprendizagem","title":"\ud83c\udfaf Ordem de Aprendizagem","text":""},{"location":"sql/#1-select-basico","title":"1\ufe0f\u20e3 SELECT B\u00e1sico","text":"<p>Como buscar dados de tabelas SAP.</p> <p>Exemplo:</p> <pre><code>SELECT * FROM scarr INTO TABLE @DATA(lt_scarr).\nLOOP AT lt_scarr INTO DATA(ls_scarr).\n  WRITE: / ls_scarr-carrid, ls_scarr-carrname.\nENDLOOP.\n</code></pre>"},{"location":"sql/#2-joins","title":"2\ufe0f\u20e3 JOINS","text":"<p>Combinar dados de m\u00faltiplas tabelas.</p> <p>Exemplo:</p> <pre><code>SELECT a~carrid, a~connid, b~carrname\n  FROM spfli AS a\n  INNER JOIN scarr AS b ON a~carrid = b~carrid\n  INTO TABLE @DATA(lt_join)\n  UP TO 10 ROWS.\n</code></pre>"},{"location":"sql/#3-agregacoes","title":"3\ufe0f\u20e3 Agrega\u00e7\u00f5es","text":"<p>Fun\u00e7\u00f5es estat\u00edsticas e agrupamento.</p> <p>Exemplo:</p> <pre><code>SELECT carrid, \n       COUNT( * ) AS total_voos, \n       AVG( price ) AS preco_medio\n  FROM sflight\n  GROUP BY carrid\n  INTO TABLE @DATA(lt_stats).\n</code></pre>"},{"location":"sql/#exercicios-praticos","title":"\ud83d\udcda Exerc\u00edcios Pr\u00e1ticos","text":"<p>Temos 25 exerc\u00edcios progressivos em <code>ex01.md</code> a <code>ex25.md</code> que cobrem:</p> <ul> <li>SELECTs com filtros complexos</li> <li>Subconsultas (subqueries)</li> <li>CASE statements</li> <li>Agrega\u00e7\u00f5es m\u00faltiplas</li> <li>JOINS de 3+ tabelas</li> <li>Otimiza\u00e7\u00e3o de performance SQL</li> </ul>"},{"location":"sql/#boas-praticas","title":"\ud83d\ude80 Boas Pr\u00e1ticas","text":""},{"location":"sql/#fazer","title":"\u2705 Fazer","text":"<ul> <li>Usar <code>@</code> para host variables (ABAP 7.40+)</li> <li>Limitar resultados com <code>UP TO n ROWS</code></li> <li>Usar \u00edndices nas cl\u00e1usulas WHERE</li> <li>Evitar SELECT * (especificar campos necess\u00e1rios)</li> </ul>"},{"location":"sql/#evitar","title":"\u274c Evitar","text":"<ul> <li>SELECTs dentro de LOOPs</li> <li>N\u00e3o usar FOR ALL ENTRIES sem valida\u00e7\u00e3o</li> <li>Evitar fun\u00e7\u00f5es pesadas em WHERE</li> </ul>"},{"location":"sql/#exemplo-completo","title":"\ud83d\udca1 Exemplo Completo","text":"<pre><code>REPORT z_sql_demo.\n\nPARAMETERS: p_carr TYPE s_carr_id DEFAULT 'LH'.\n\nSTART-OF-SELECTION.\n\n  \" SELECT com JOIN e agrega\u00e7\u00e3o\n  SELECT a~carrid,\n         a~carrname,\n         COUNT( * ) AS num_flights,\n         AVG( b~price ) AS avg_price\n    FROM scarr AS a\n    INNER JOIN sflight AS b ON a~carrid = b~carrid\n    WHERE a~carrid = @p_carr\n    GROUP BY a~carrid, a~carrname\n    INTO TABLE @DATA(lt_result).\n\n  \" Exibir resultados\n  LOOP AT lt_result INTO DATA(ls_result).\n    WRITE: / ls_result-carrid, \n           ls_result-carrname, \n           ls_result-num_flights, \n           ls_result-avg_price.\n  ENDLOOP.\n</code></pre>"},{"location":"sql/#proximos-passos","title":"\ud83d\udd17 Pr\u00f3ximos Passos","text":"<ol> <li>Comece por SELECT B\u00e1sico</li> <li>Depois siga para JOINS</li> <li>Pratique com os exerc\u00edcios <code>ex01.md</code> a <code>ex25.md</code></li> <li>Avance para Performance para otimiza\u00e7\u00f5es</li> </ol>"},{"location":"sql/agregacoes/","title":"Agrega\u00e7\u00f5es","text":"<pre><code>SELECT carrid, COUNT( * ) AS total_voos, AVG( price ) AS preco_medio\n  FROM sflight\n  GROUP BY carrid\n  INTO TABLE @DATA(lt_stats).\n</code></pre>"},{"location":"sql/joins/","title":"Joins","text":"<pre><code>SELECT a~carrid, a~connid, b~carrname\n  FROM spfli AS a\n  INNER JOIN scarr AS b ON a~carrid = b~carrid\n  INTO TABLE @DATA(lt_join).\n</code></pre>"},{"location":"sql/select_basico/","title":"SELECT b\u00e1sico","text":"<pre><code>SELECT * FROM scarr INTO TABLE @DATA(lt_scarr).\nLOOP AT lt_scarr INTO DATA(ls_scarr).\n  WRITE: / ls_scarr-carrid, ls_scarr-carrname.\nENDLOOP.\n</code></pre>"},{"location":"testes/","title":"Testes ABAP Unit","text":"<p>Introdu\u00e7\u00e3o a testes unit\u00e1rios em ABAP (ABAP Unit) e exemplos de como estruturar testes.</p> <p>Conte\u00fado: - <code>unit_test.md</code> \u2014 guia de ABAP Unit - <code>ex01.md</code> \u2026 <code>ex03.md</code> \u2014 exemplos de testes</p> <p>Pr\u00f3ximo passo: leia <code>unit_test.md</code> e crie um teste simples para um m\u00f3dulo de fun\u00e7\u00e3o.</p>"},{"location":"testes/unit_test/","title":"ABAP Unit","text":"<pre><code>CLASS ltc_demo DEFINITION FOR TESTING.\n  PRIVATE SECTION.\n    METHODS test_sum FOR TESTING.\nENDCLASS.\n\nCLASS ltc_demo IMPLEMENTATION.\n  METHOD test_sum.\n    cl_abap_unit_assert=&gt;assert_equals( act = 2 + 2 exp = 4 ).\n  ENDMETHOD.\nENDCLASS.\n</code></pre>"},{"location":"utilitarios/","title":"\ud83e\uddf0 Utilit\u00e1rios e Fun\u00e7\u00f5es Comuns","text":"<p>Snippets, utilit\u00e1rios e fun\u00e7\u00f5es auxiliares \u00fateis em desenvolvimento ABAP: datas, JSON, strings, convers\u00f5es e muito mais.</p>"},{"location":"utilitarios/#o-que-vais-encontrar","title":"\ud83d\udcd6 O que vais encontrar","text":"<ul> <li>Manipula\u00e7\u00e3o de datas e horas</li> <li>Convers\u00e3o JSON/XML</li> <li>Opera\u00e7\u00f5es com strings</li> <li>Fun\u00e7\u00f5es de convers\u00e3o</li> <li>Gera\u00e7\u00e3o de GUIDs</li> <li>Trabalhar com ficheiros</li> <li>Envio de emails</li> <li>PopUps e mensagens</li> <li>Utilit\u00e1rios de tabela</li> </ul>"},{"location":"utilitarios/#categorias","title":"\ud83c\udfaf Categorias","text":""},{"location":"utilitarios/#datas-e-horas","title":"\ud83d\udcc5 Datas e Horas","text":"<pre><code>\" Data atual\nDATA(lv_hoje) = sy-datum.\n\n\" Adicionar dias\nDATA(lv_amanha) = lv_hoje + 1.\nDATA(lv_proxima_semana) = lv_hoje + 7.\n\n\" Diferen\u00e7a entre datas\nDATA lv_dias TYPE i.\nCALL FUNCTION 'HR_99S_INTERVAL_BETWEEN_DATES'\n  EXPORTING\n    begda = lv_data_inicio\n    endda = lv_data_fim\n  IMPORTING\n    days  = lv_dias.\n\n\" Primeiro dia do m\u00eas\nDATA(lv_primeiro_dia) = lv_hoje.\nlv_primeiro_dia+6(2) = '01'.\n\n\" \u00daltimo dia do m\u00eas\nCALL FUNCTION 'LAST_DAY_OF_MONTHS'\n  EXPORTING\n    day_in  = lv_hoje\n  IMPORTING\n    last_day_of_month = DATA(lv_ultimo_dia).\n\n\" Formatar data\nWRITE lv_hoje TO DATA(lv_data_formatada) DD/MM/YYYY.\n</code></pre>"},{"location":"utilitarios/#json","title":"\ud83d\udce6 JSON","text":"<pre><code>\" Serializar (ABAP \u2192 JSON)\nDATA: lt_dados TYPE TABLE OF sflight.\nSELECT * FROM sflight INTO TABLE lt_dados UP TO 10 ROWS.\n\nDATA(lv_json) = /ui2/cl_json=&gt;serialize( \n  data = lt_dados \n  compress = abap_false \n  pretty_name = /ui2/cl_json=&gt;pretty_mode-camel_case ).\n\n\" Deserializar (JSON \u2192 ABAP)\n/ui2/cl_json=&gt;deserialize(\n  EXPORTING json = lv_json\n  CHANGING  data = lt_dados ).\n\n\" JSON com formata\u00e7\u00e3o bonita\nDATA(lv_json_pretty) = /ui2/cl_json=&gt;serialize( \n  data = lt_dados \n  compress = abap_false\n  pretty_name = /ui2/cl_json=&gt;pretty_mode-low_case ).\n</code></pre>"},{"location":"utilitarios/#strings","title":"\ud83d\udd24 Strings","text":""},{"location":"utilitarios/#concatenar","title":"Concatenar","text":"<pre><code>DATA(lv_nome_completo) = |{ lv_primeiro_nome } { lv_apelido }|.\n\n\" Ou com CONCATENATE\nCONCATENATE lv_primeiro_nome lv_apelido \n  INTO lv_nome_completo SEPARATED BY space.\n</code></pre>"},{"location":"utilitarios/#dividir","title":"Dividir","text":"<pre><code>SPLIT lv_email AT '@' INTO lv_user lv_domain.\n</code></pre>"},{"location":"utilitarios/#substituir","title":"Substituir","text":"<pre><code>REPLACE ALL OCCURRENCES OF '.' IN lv_texto WITH ','.\n</code></pre>"},{"location":"utilitarios/#maiusculasminusculas","title":"Mai\u00fasculas/Min\u00fasculas","text":"<pre><code>DATA(lv_maiusculas) = to_upper( lv_texto ).\nDATA(lv_minusculas) = to_lower( lv_texto ).\n</code></pre>"},{"location":"utilitarios/#remover-espacos","title":"Remover espa\u00e7os","text":"<pre><code>CONDENSE lv_texto NO-GAPS.  \" Remove todos os espa\u00e7os\nCONDENSE lv_texto.           \" Remove espa\u00e7os extra\n</code></pre>"},{"location":"utilitarios/#conversoes","title":"\ud83d\udd04 Convers\u00f5es","text":""},{"location":"utilitarios/#string-numero","title":"String \u2194 N\u00famero","text":"<pre><code>\" String para n\u00famero\nDATA(lv_numero) = CONV i( '123' ).\n\n\" N\u00famero para string\nDATA(lv_texto) = |{ lv_numero }|.\nDATA(lv_texto2) = CONV string( lv_numero ).\n</code></pre>"},{"location":"utilitarios/#data-string","title":"Data \u2194 String","text":"<pre><code>\" Data para string\nDATA lv_data_str TYPE string.\nWRITE sy-datum TO lv_data_str DD/MM/YYYY.\n\n\" String para data\nCALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'\n  EXPORTING\n    date_external = '31/12/2024'\n    accept_initial_date = abap_true\n  IMPORTING\n    date_internal = DATA(lv_data).\n</code></pre>"},{"location":"utilitarios/#guid-uuid","title":"\ud83c\udd94 GUID / UUID","text":"<pre><code>TRY.\n    DATA(lv_guid) = cl_system_uuid=&gt;create_uuid_x16_static( ).\n    DATA(lv_guid_c32) = cl_system_uuid=&gt;convert_uuid_x16_static( lv_guid ).\n    WRITE: / lv_guid_c32.\n  CATCH cx_uuid_error.\n    MESSAGE 'Erro ao gerar GUID' TYPE 'E'.\nENDTRY.\n</code></pre>"},{"location":"utilitarios/#envio-de-email","title":"\u2709\ufe0f Envio de Email","text":"<pre><code>DATA: lt_receivers TYPE TABLE OF somlreci1,\n      lt_body      TYPE TABLE OF soli.\n\nAPPEND VALUE #( receiver = 'user@empresa.com' rec_type = 'U' ) TO lt_receivers.\nAPPEND 'Ol\u00e1,' TO lt_body.\nAPPEND 'Este \u00e9 um email de teste.' TO lt_body.\n\nCALL FUNCTION 'SO_NEW_DOCUMENT_ATT_SEND_API1'\n  EXPORTING\n    document_data = VALUE sodocchgi1(\n      obj_name  = 'EMAIL'\n      obj_descr = 'Assunto do Email' )\n  TABLES\n    object_content = lt_body\n    receivers      = lt_receivers\n  EXCEPTIONS\n    OTHERS = 99.\n\nIF sy-subrc = 0.\n  COMMIT WORK.\n  MESSAGE 'Email enviado com sucesso' TYPE 'S'.\nENDIF.\n</code></pre>"},{"location":"utilitarios/#ficheiros","title":"\ud83d\udcc1 Ficheiros","text":""},{"location":"utilitarios/#ler-ficheiro-local","title":"Ler ficheiro local","text":"<pre><code>DATA: lt_dados TYPE TABLE OF string.\n\nCALL FUNCTION 'GUI_UPLOAD'\n  EXPORTING\n    filename = 'C:\\temp\\dados.txt'\n  TABLES\n    data_tab = lt_dados.\n</code></pre>"},{"location":"utilitarios/#gravar-ficheiro-local","title":"Gravar ficheiro local","text":"<pre><code>DATA: lt_output TYPE TABLE OF string.\nAPPEND 'Linha 1' TO lt_output.\nAPPEND 'Linha 2' TO lt_output.\n\nCALL FUNCTION 'GUI_DOWNLOAD'\n  EXPORTING\n    filename = 'C:\\temp\\output.txt'\n  TABLES\n    data_tab = lt_output.\n</code></pre>"},{"location":"utilitarios/#popups-e-mensagens","title":"\ud83d\udcac PopUps e Mensagens","text":""},{"location":"utilitarios/#popup-de-confirmacao","title":"Popup de Confirma\u00e7\u00e3o","text":"<pre><code>CALL FUNCTION 'POPUP_TO_CONFIRM'\n  EXPORTING\n    titlebar       = 'Confirmar'\n    text_question  = 'Tem a certeza?'\n    icon_button_1  = 'icon_okay'\n    icon_button_2  = 'icon_cancel'\n  IMPORTING\n    answer         = DATA(lv_resposta).\n\nIF lv_resposta = '1'.  \" Sim\n  WRITE: / 'Confirmado'.\nENDIF.\n</code></pre>"},{"location":"utilitarios/#popup-com-input","title":"Popup com Input","text":"<pre><code>DATA lv_valor TYPE string.\n\nCALL FUNCTION 'POPUP_GET_VALUES'\n  EXPORTING\n    popup_title = 'Introduzir Valor'\n  TABLES\n    fields      = VALUE sval_tab(\n      ( tabname = 'SCARR' fieldname = 'CARRID' value = lv_valor ) ).\n\nWRITE: / 'Valor:', lv_valor.\n</code></pre>"},{"location":"utilitarios/#mensagem-de-progresso","title":"Mensagem de Progresso","text":"<pre><code>CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'\n  EXPORTING\n    percentage = 50\n    text       = 'A processar... 50%'.\n</code></pre>"},{"location":"utilitarios/#operacoes-com-tabelas","title":"\ud83d\udd22 Opera\u00e7\u00f5es com Tabelas","text":""},{"location":"utilitarios/#remover-duplicados","title":"Remover Duplicados","text":"<pre><code>SORT lt_dados.\nDELETE ADJACENT DUPLICATES FROM lt_dados.\n</code></pre>"},{"location":"utilitarios/#contar-linhas-com-condicao","title":"Contar Linhas com Condi\u00e7\u00e3o","text":"<pre><code>DATA(lv_count) = REDUCE i( INIT x = 0\n                           FOR wa IN lt_dados WHERE ( price &gt; 1000 )\n                           NEXT x = x + 1 ).\n</code></pre>"},{"location":"utilitarios/#filtrar-tabela","title":"Filtrar Tabela","text":"<pre><code>DATA(lt_filtrada) = FILTER #( lt_dados WHERE carrid = 'LH' ).\n</code></pre>"},{"location":"utilitarios/#mapeartransformar","title":"Mapear/Transformar","text":"<pre><code>DATA(lt_nomes) = VALUE stringtab( FOR wa IN lt_pessoas ( wa-nome ) ).\n</code></pre>"},{"location":"utilitarios/#exercicios-praticos","title":"\ud83d\udcda Exerc\u00edcios Pr\u00e1ticos","text":"<p>Exerc\u00edcios dispon\u00edveis (ser\u00e3o desenvolvidos): - <code>ex01.md</code> \u2192 Manipula\u00e7\u00e3o de datas - <code>ex02.md</code> \u2192 JSON e XML - <code>ex03.md</code> \u2192 Opera\u00e7\u00f5es com strings - <code>ex04.md</code> \u2192 Upload/Download ficheiros - <code>ex05.md</code> \u2192 Envio de emails - <code>ex06-ex10.md</code> \u2192 Casos pr\u00e1ticos diversos</p>"},{"location":"utilitarios/#funcoes-uteis","title":"\ud83e\udde9 Fun\u00e7\u00f5es \u00dateis","text":"Fun\u00e7\u00e3o Descri\u00e7\u00e3o <code>POPUP_TO_CONFIRM</code> Popup de confirma\u00e7\u00e3o <code>POPUP_GET_VALUES</code> Popup com input <code>GUI_UPLOAD</code> Upload ficheiro <code>GUI_DOWNLOAD</code> Download ficheiro <code>SO_NEW_DOCUMENT_ATT_SEND_API1</code> Enviar email <code>CONVERT_DATE_TO_INTERNAL</code> Converter data <code>HR_99S_INTERVAL_BETWEEN_DATES</code> Diferen\u00e7a entre datas <code>LAST_DAY_OF_MONTHS</code> \u00daltimo dia do m\u00eas"},{"location":"utilitarios/#proximos-passos","title":"\ud83d\udd17 Pr\u00f3ximos Passos","text":"<ol> <li>Leia Datas e JSON</li> <li>Experimente os snippets no seu sistema</li> <li>Crie uma biblioteca pessoal de fun\u00e7\u00f5es reutiliz\u00e1veis</li> <li>Pratique com <code>ex01.md</code> a <code>ex10.md</code></li> <li>Partilhe snippets \u00fateis com a equipa</li> </ol>"},{"location":"utilitarios/datas/","title":"Datas e Horas","text":"<pre><code>DATA lv_hoje TYPE d VALUE sy-datum.\nDATA(lv_amanha) = lv_hoje + 1.\nWRITE: / lv_hoje, lv_amanha.\n</code></pre>"},{"location":"utilitarios/json/","title":"Convers\u00e3o JSON","text":"<pre><code>DATA(lv_json) = /ui2/cl_json=&gt;serialize( data = lt_data ).\nWRITE lv_json.\n</code></pre>"}]}